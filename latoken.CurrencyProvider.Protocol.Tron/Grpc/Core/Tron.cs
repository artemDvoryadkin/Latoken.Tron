// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: core/Tron.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core {

  /// <summary>Holder for reflection information generated from core/Tron.proto</summary>
  public static partial class TronReflection {

    #region Descriptor
    /// <summary>File descriptor for core/Tron.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static TronReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9jb3JlL1Ryb24ucHJvdG8SCHByb3RvY29sGhlnb29nbGUvcHJvdG9idWYv",
            "YW55LnByb3RvGhNjb3JlL0Rpc2NvdmVyLnByb3RvIioKCUFjY291bnRJZBIM",
            "CgRuYW1lGAEgASgMEg8KB2FkZHJlc3MYAiABKAwiMAoEVm90ZRIUCgx2b3Rl",
            "X2FkZHJlc3MYASABKAwSEgoKdm90ZV9jb3VudBgCIAEoAyLRAgoIUHJvcG9z",
            "YWwSEwoLcHJvcG9zYWxfaWQYASABKAMSGAoQcHJvcG9zZXJfYWRkcmVzcxgC",
            "IAEoDBI2CgpwYXJhbWV0ZXJzGAMgAygLMiIucHJvdG9jb2wuUHJvcG9zYWwu",
            "UGFyYW1ldGVyc0VudHJ5EhcKD2V4cGlyYXRpb25fdGltZRgEIAEoAxITCgtj",
            "cmVhdGVfdGltZRgFIAEoAxIRCglhcHByb3ZhbHMYBiADKAwSJwoFc3RhdGUY",
            "ByABKA4yGC5wcm90b2NvbC5Qcm9wb3NhbC5TdGF0ZRoxCg9QYXJhbWV0ZXJz",
            "RW50cnkSCwoDa2V5GAEgASgDEg0KBXZhbHVlGAIgASgDOgI4ASJBCgVTdGF0",
            "ZRILCgdQRU5ESU5HEAASDwoLRElTQVBQUk9WRUQQARIMCghBUFBST1ZFRBAC",
            "EgwKCENBTkNFTEVEEAMigQEKD0NoYWluUGFyYW1ldGVycxJACg5jaGFpblBh",
            "cmFtZXRlchgBIAMoCzIoLnByb3RvY29sLkNoYWluUGFyYW1ldGVycy5DaGFp",
            "blBhcmFtZXRlchosCg5DaGFpblBhcmFtZXRlchILCgNrZXkYASABKAkSDQoF",
            "dmFsdWUYAiABKAMi6QkKB0FjY291bnQSFAoMYWNjb3VudF9uYW1lGAEgASgM",
            "EiMKBHR5cGUYAiABKA4yFS5wcm90b2NvbC5BY2NvdW50VHlwZRIPCgdhZGRy",
            "ZXNzGAMgASgMEg8KB2JhbGFuY2UYBCABKAMSHQoFdm90ZXMYBSADKAsyDi5w",
            "cm90b2NvbC5Wb3RlEisKBWFzc2V0GAYgAygLMhwucHJvdG9jb2wuQWNjb3Vu",
            "dC5Bc3NldEVudHJ5EigKBmZyb3plbhgHIAMoCzIYLnByb3RvY29sLkFjY291",
            "bnQuRnJvemVuEhEKCW5ldF91c2FnZRgIIAEoAxITCgtjcmVhdGVfdGltZRgJ",
            "IAEoAxIcChRsYXRlc3Rfb3ByYXRpb25fdGltZRgKIAEoAxIRCglhbGxvd2Fu",
            "Y2UYCyABKAMSHAoUbGF0ZXN0X3dpdGhkcmF3X3RpbWUYDCABKAMSDAoEY29k",
            "ZRgNIAEoDBISCgppc193aXRuZXNzGA4gASgIEhQKDGlzX2NvbW1pdHRlZRgP",
            "IAEoCBIvCg1mcm96ZW5fc3VwcGx5GBAgAygLMhgucHJvdG9jb2wuQWNjb3Vu",
            "dC5Gcm96ZW4SGQoRYXNzZXRfaXNzdWVkX25hbWUYESABKAwSVAobbGF0ZXN0",
            "X2Fzc2V0X29wZXJhdGlvbl90aW1lGBIgAygLMi8ucHJvdG9jb2wuQWNjb3Vu",
            "dC5MYXRlc3RBc3NldE9wZXJhdGlvblRpbWVFbnRyeRIWCg5mcmVlX25ldF91",
            "c2FnZRgTIAEoAxJGChRmcmVlX2Fzc2V0X25ldF91c2FnZRgUIAMoCzIoLnBy",
            "b3RvY29sLkFjY291bnQuRnJlZUFzc2V0TmV0VXNhZ2VFbnRyeRIbChNsYXRl",
            "c3RfY29uc3VtZV90aW1lGBUgASgDEiAKGGxhdGVzdF9jb25zdW1lX2ZyZWVf",
            "dGltZRgWIAEoAxISCgphY2NvdW50X2lkGBcgASgMEjsKEGFjY291bnRfcmVz",
            "b3VyY2UYGiABKAsyIS5wcm90b2NvbC5BY2NvdW50LkFjY291bnRSZXNvdXJj",
            "ZRIQCghjb2RlSGFzaBgeIAEoDBo1CgZGcm96ZW4SFgoOZnJvemVuX2JhbGFu",
            "Y2UYASABKAMSEwoLZXhwaXJlX3RpbWUYAiABKAMaLAoKQXNzZXRFbnRyeRIL",
            "CgNrZXkYASABKAkSDQoFdmFsdWUYAiABKAM6AjgBGj8KHUxhdGVzdEFzc2V0",
            "T3BlcmF0aW9uVGltZUVudHJ5EgsKA2tleRgBIAEoCRINCgV2YWx1ZRgCIAEo",
            "AzoCOAEaOAoWRnJlZUFzc2V0TmV0VXNhZ2VFbnRyeRILCgNrZXkYASABKAkS",
            "DQoFdmFsdWUYAiABKAM6AjgBGtcBCg9BY2NvdW50UmVzb3VyY2USEQoJY3B1",
            "X3VzYWdlGAEgASgDEjgKFmZyb3plbl9iYWxhbmNlX2Zvcl9jcHUYAiABKAsy",
            "GC5wcm90b2NvbC5BY2NvdW50LkZyb3plbhIjChtsYXRlc3RfY29uc3VtZV90",
            "aW1lX2Zvcl9jcHUYAyABKAMSFQoNc3RvcmFnZV9saW1pdBgGIAEoAxIVCg1z",
            "dG9yYWdlX3VzYWdlGAcgASgDEiQKHGxhdGVzdF9leGNoYW5nZV9zdG9yYWdl",
            "X3RpbWUYCCABKAMiSgoJYXV0aG9yaXR5EiQKB2FjY291bnQYASABKAsyEy5w",
            "cm90b2NvbC5BY2NvdW50SWQSFwoPcGVybWlzc2lvbl9uYW1lGAIgASgMIjIK",
            "CnBlcm1pc3Npb24SJAoHYWNjb3VudBgBIAEoCzITLnByb3RvY29sLkFjY291",
            "bnRJZCK1AQoHV2l0bmVzcxIPCgdhZGRyZXNzGAEgASgMEhEKCXZvdGVDb3Vu",
            "dBgCIAEoAxIOCgZwdWJLZXkYAyABKAwSCwoDdXJsGAQgASgJEhUKDXRvdGFs",
            "UHJvZHVjZWQYBSABKAMSEwoLdG90YWxNaXNzZWQYBiABKAMSFgoObGF0ZXN0",
            "QmxvY2tOdW0YByABKAMSFQoNbGF0ZXN0U2xvdE51bRgIIAEoAxIOCgZpc0pv",
            "YnMYCSABKAgiXgoFVm90ZXMSDwoHYWRkcmVzcxgBIAEoDBIhCglvbGRfdm90",
            "ZXMYAiADKAsyDi5wcm90b2NvbC5Wb3RlEiEKCW5ld192b3RlcxgDIAMoCzIO",
            "LnByb3RvY29sLlZvdGUiLQoIVFhPdXRwdXQSDQoFdmFsdWUYASABKAMSEgoK",
            "cHViS2V5SGFzaBgCIAEoDCJ4CgdUWElucHV0EicKCHJhd19kYXRhGAEgASgL",
            "MhUucHJvdG9jb2wuVFhJbnB1dC5yYXcSEQoJc2lnbmF0dXJlGAQgASgMGjEK",
            "A3JhdxIMCgR0eElEGAEgASgMEgwKBHZvdXQYAiABKAMSDgoGcHViS2V5GAMg",
            "ASgMIjAKCVRYT3V0cHV0cxIjCgdvdXRwdXRzGAEgAygLMhIucHJvdG9jb2wu",
            "VFhPdXRwdXQipgEKD1Jlc291cmNlUmVjZWlwdBIRCgljcHVfdXNhZ2UYASAB",
            "KAMSDwoHY3B1X2ZlZRgCIAEoAxIRCgluZXRfdXNhZ2UYAyABKAMSDwoHbmV0",
            "X2ZlZRgEIAEoAxIVCg1zdG9yYWdlX2RlbHRhGAUgASgDEhMKC3N0b3JhZ2Vf",
            "ZmVlGAYgASgDIh8KBGNvZGUSCwoHU1VDQ0VTUxAAEgoKBkZBSUxFRBABIvwK",
            "CgtUcmFuc2FjdGlvbhIrCghyYXdfZGF0YRgBIAEoCzIZLnByb3RvY29sLlRy",
            "YW5zYWN0aW9uLnJhdxIRCglzaWduYXR1cmUYAiADKAwSKQoDcmV0GAUgAygL",
            "MhwucHJvdG9jb2wuVHJhbnNhY3Rpb24uUmVzdWx0GugGCghDb250cmFjdBI5",
            "CgR0eXBlGAEgASgOMisucHJvdG9jb2wuVHJhbnNhY3Rpb24uQ29udHJhY3Qu",
            "Q29udHJhY3RUeXBlEicKCXBhcmFtZXRlchgCIAEoCzIULmdvb2dsZS5wcm90",
            "b2J1Zi5BbnkSEAoIcHJvdmlkZXIYAyABKAwSFAoMQ29udHJhY3ROYW1lGAQg",
            "ASgMIs8FCgxDb250cmFjdFR5cGUSGQoVQWNjb3VudENyZWF0ZUNvbnRyYWN0",
            "EAASFAoQVHJhbnNmZXJDb250cmFjdBABEhkKFVRyYW5zZmVyQXNzZXRDb250",
            "cmFjdBACEhUKEVZvdGVBc3NldENvbnRyYWN0EAMSFwoTVm90ZVdpdG5lc3ND",
            "b250cmFjdBAEEhkKFVdpdG5lc3NDcmVhdGVDb250cmFjdBAFEhYKEkFzc2V0",
            "SXNzdWVDb250cmFjdBAGEhkKFVdpdG5lc3NVcGRhdGVDb250cmFjdBAIEiEK",
            "HVBhcnRpY2lwYXRlQXNzZXRJc3N1ZUNvbnRyYWN0EAkSGQoVQWNjb3VudFVw",
            "ZGF0ZUNvbnRyYWN0EAoSGQoVRnJlZXplQmFsYW5jZUNvbnRyYWN0EAsSGwoX",
            "VW5mcmVlemVCYWxhbmNlQ29udHJhY3QQDBIbChdXaXRoZHJhd0JhbGFuY2VD",
            "b250cmFjdBANEhkKFVVuZnJlZXplQXNzZXRDb250cmFjdBAOEhcKE1VwZGF0",
            "ZUFzc2V0Q29udHJhY3QQDxIaChZQcm9wb3NhbENyZWF0ZUNvbnRyYWN0EBAS",
            "GwoXUHJvcG9zYWxBcHByb3ZlQ29udHJhY3QQERIaChZQcm9wb3NhbERlbGV0",
            "ZUNvbnRyYWN0EBISGAoUU2V0QWNjb3VudElkQ29udHJhY3QQExISCg5DdXN0",
            "b21Db250cmFjdBAUEhYKEkJ1eVN0b3JhZ2VDb250cmFjdBAVEhsKF0J1eVN0",
            "b3JhZ2VCeXRlc0NvbnRyYWN0EBYSFwoTU2VsbFN0b3JhZ2VDb250cmFjdBAX",
            "EhcKE0NyZWF0ZVNtYXJ0Q29udHJhY3QQHhIYChRUcmlnZ2VyU21hcnRDb250",
            "cmFjdBAfEg8KC0dldENvbnRyYWN0ECASGQoVVXBkYXRlU2V0dGluZ0NvbnRy",
            "YWN0ECEalwEKBlJlc3VsdBILCgNmZWUYASABKAMSLgoDcmV0GAIgASgOMiEu",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb24uUmVzdWx0LmNvZGUSFwoPd2l0aGRyYXdf",
            "YW1vdW50GA8gASgDEhcKD3VuZnJlZXplX2Ftb3VudBgQIAEoAyIeCgRjb2Rl",
            "EgoKBlNVQ0VTUxAAEgoKBkZBSUxFRBABGvwBCgNyYXcSFwoPcmVmX2Jsb2Nr",
            "X2J5dGVzGAEgASgMEhUKDXJlZl9ibG9ja19udW0YAyABKAMSFgoOcmVmX2Js",
            "b2NrX2hhc2gYBCABKAwSEgoKZXhwaXJhdGlvbhgIIAEoAxIiCgVhdXRocxgJ",
            "IAMoCzITLnByb3RvY29sLmF1dGhvcml0eRIMCgRkYXRhGAogASgMEjAKCGNv",
            "bnRyYWN0GAsgAygLMh4ucHJvdG9jb2wuVHJhbnNhY3Rpb24uQ29udHJhY3QS",
            "DwoHc2NyaXB0cxgMIAEoDBIRCgl0aW1lc3RhbXAYDiABKAMSEQoJZmVlX2xp",
            "bWl0GBIgASgDIq0DCg9UcmFuc2FjdGlvbkluZm8SCgoCaWQYASABKAwSCwoD",
            "ZmVlGAIgASgDEhMKC2Jsb2NrTnVtYmVyGAMgASgDEhYKDmJsb2NrVGltZVN0",
            "YW1wGAQgASgDEhYKDmNvbnRyYWN0UmVzdWx0GAUgAygMEhgKEGNvbnRyYWN0",
            "X2FkZHJlc3MYBiABKAwSKgoHcmVjZWlwdBgHIAEoCzIZLnByb3RvY29sLlJl",
            "c291cmNlUmVjZWlwdBIqCgNsb2cYCCADKAsyHS5wcm90b2NvbC5UcmFuc2Fj",
            "dGlvbkluZm8uTG9nEi4KBnJlc3VsdBgJIAEoDjIeLnByb3RvY29sLlRyYW5z",
            "YWN0aW9uSW5mby5jb2RlEhIKCnJlc01lc3NhZ2UYCiABKAwSFwoPd2l0aGRy",
            "YXdfYW1vdW50GA8gASgDEhcKD3VuZnJlZXplX2Ftb3VudBgQIAEoAxo0CgNM",
            "b2cSDwoHYWRkcmVzcxgBIAEoDBIOCgZ0b3BpY3MYAiADKAwSDAoEZGF0YRgD",
            "IAEoDCIeCgRjb2RlEgoKBlNVQ0VTUxAAEgoKBkZBSUxFRBABIjsKDFRyYW5z",
            "YWN0aW9ucxIrCgx0cmFuc2FjdGlvbnMYASADKAsyFS5wcm90b2NvbC5UcmFu",
            "c2FjdGlvbiJRCg9UcmFuc2FjdGlvblNpZ24SKgoLdHJhbnNhY3Rpb24YASAB",
            "KAsyFS5wcm90b2NvbC5UcmFuc2FjdGlvbhISCgpwcml2YXRlS2V5GAIgASgM",
            "ItQBCgtCbG9ja0hlYWRlchIrCghyYXdfZGF0YRgBIAEoCzIZLnByb3RvY29s",
            "LkJsb2NrSGVhZGVyLnJhdxIZChF3aXRuZXNzX3NpZ25hdHVyZRgCIAEoDBp9",
            "CgNyYXcSEQoJdGltZXN0YW1wGAEgASgDEhIKCnR4VHJpZVJvb3QYAiABKAwS",
            "EgoKcGFyZW50SGFzaBgDIAEoDBIOCgZudW1iZXIYByABKAMSEgoKd2l0bmVz",
            "c19pZBgIIAEoAxIXCg93aXRuZXNzX2FkZHJlc3MYCSABKAwiYQoFQmxvY2sS",
            "KwoMdHJhbnNhY3Rpb25zGAEgAygLMhUucHJvdG9jb2wuVHJhbnNhY3Rpb24S",
            "KwoMYmxvY2tfaGVhZGVyGAIgASgLMhUucHJvdG9jb2wuQmxvY2tIZWFkZXIi",
            "fAoOQ2hhaW5JbnZlbnRvcnkSLQoDaWRzGAEgAygLMiAucHJvdG9jb2wuQ2hh",
            "aW5JbnZlbnRvcnkuQmxvY2tJZBISCgpyZW1haW5fbnVtGAIgASgDGicKB0Js",
            "b2NrSWQSDAoEaGFzaBgBIAEoDBIOCgZudW1iZXIYAiABKAMivwEKDkJsb2Nr",
            "SW52ZW50b3J5Ei0KA2lkcxgBIAMoCzIgLnByb3RvY29sLkJsb2NrSW52ZW50",
            "b3J5LkJsb2NrSWQSKwoEdHlwZRgCIAEoDjIdLnByb3RvY29sLkJsb2NrSW52",
            "ZW50b3J5LlR5cGUaJwoHQmxvY2tJZBIMCgRoYXNoGAEgASgMEg4KBm51bWJl",
            "chgCIAEoAyIoCgRUeXBlEggKBFNZTkMQABILCgdBRFZUSVNFEAESCQoFRkVU",
            "Q0gQAiJuCglJbnZlbnRvcnkSLwoEdHlwZRgBIAEoDjIhLnByb3RvY29sLklu",
            "dmVudG9yeS5JbnZlbnRvcnlUeXBlEgsKA2lkcxgCIAMoDCIjCg1JbnZlbnRv",
            "cnlUeXBlEgcKA1RSWBAAEgkKBUJMT0NLEAEi5QEKBUl0ZW1zEiYKBHR5cGUY",
            "ASABKA4yGC5wcm90b2NvbC5JdGVtcy5JdGVtVHlwZRIfCgZibG9ja3MYAiAD",
            "KAsyDy5wcm90b2NvbC5CbG9jaxIsCg1ibG9ja19oZWFkZXJzGAMgAygLMhUu",
            "cHJvdG9jb2wuQmxvY2tIZWFkZXISKwoMdHJhbnNhY3Rpb25zGAQgAygLMhUu",
            "cHJvdG9jb2wuVHJhbnNhY3Rpb24iOAoISXRlbVR5cGUSBwoDRVJSEAASBwoD",
            "VFJYEAESCQoFQkxPQ0sQAhIPCgtCTE9DS0hFQURFUhADIjQKEUR5bmFtaWNQ",
            "cm9wZXJ0aWVzEh8KF2xhc3Rfc29saWRpdHlfYmxvY2tfbnVtGAEgASgDIjkK",
            "EURpc2Nvbm5lY3RNZXNzYWdlEiQKBnJlYXNvbhgBIAEoDjIULnByb3RvY29s",
            "LlJlYXNvbkNvZGUioAIKDEhlbGxvTWVzc2FnZRIgCgRmcm9tGAEgASgLMhIu",
            "cHJvdG9jb2wuRW5kcG9pbnQSDwoHdmVyc2lvbhgCIAEoBRIRCgl0aW1lc3Rh",
            "bXAYAyABKAMSNgoOZ2VuZXNpc0Jsb2NrSWQYBCABKAsyHi5wcm90b2NvbC5I",
            "ZWxsb01lc3NhZ2UuQmxvY2tJZBI0Cgxzb2xpZEJsb2NrSWQYBSABKAsyHi5w",
            "cm90b2NvbC5IZWxsb01lc3NhZ2UuQmxvY2tJZBIzCgtoZWFkQmxvY2tJZBgG",
            "IAEoCzIeLnByb3RvY29sLkhlbGxvTWVzc2FnZS5CbG9ja0lkGicKB0Jsb2Nr",
            "SWQSDAoEaGFzaBgBIAEoDBIOCgZudW1iZXIYAiABKAMihgEKC1N0b3JhZ2VJ",
            "dGVtEhgKEGNvbnRyYWN0X2FkZHJlc3MYASABKAwSLwoFaXRlbXMYAiADKAsy",
            "IC5wcm90b2NvbC5TdG9yYWdlSXRlbS5JdGVtc0VudHJ5GiwKCkl0ZW1zRW50",
            "cnkSCwoDa2V5GAEgASgJEg0KBXZhbHVlGAIgASgMOgI4ASLBBgoNU21hcnRD",
            "b250cmFjdBIWCg5vcmlnaW5fYWRkcmVzcxgBIAEoDBIYChBjb250cmFjdF9h",
            "ZGRyZXNzGAIgASgMEigKA2FiaRgDIAEoCzIbLnByb3RvY29sLlNtYXJ0Q29u",
            "dHJhY3QuQUJJEhAKCGJ5dGVjb2RlGAQgASgMEhIKCmNhbGxfdmFsdWUYBSAB",
            "KAMSJQodY29uc3VtZV91c2VyX3Jlc291cmNlX3BlcmNlbnQYBiABKAMSDAoE",
            "bmFtZRgHIAEoCRr4BAoDQUJJEjEKBmVudHJ5cxgBIAMoCzIhLnByb3RvY29s",
            "LlNtYXJ0Q29udHJhY3QuQUJJLkVudHJ5Gr0ECgVFbnRyeRIRCglhbm9ueW1v",
            "dXMYASABKAgSEAoIY29uc3RhbnQYAiABKAgSDAoEbmFtZRgDIAEoCRI3CgZp",
            "bnB1dHMYBCADKAsyJy5wcm90b2NvbC5TbWFydENvbnRyYWN0LkFCSS5FbnRy",
            "eS5QYXJhbRI4CgdvdXRwdXRzGAUgAygLMicucHJvdG9jb2wuU21hcnRDb250",
            "cmFjdC5BQkkuRW50cnkuUGFyYW0SOQoEdHlwZRgGIAEoDjIrLnByb3RvY29s",
            "LlNtYXJ0Q29udHJhY3QuQUJJLkVudHJ5LkVudHJ5VHlwZRIPCgdwYXlhYmxl",
            "GAcgASgIEk4KD3N0YXRlTXV0YWJpbGl0eRgIIAEoDjI1LnByb3RvY29sLlNt",
            "YXJ0Q29udHJhY3QuQUJJLkVudHJ5LlN0YXRlTXV0YWJpbGl0eVR5cGUaNAoF",
            "UGFyYW0SDwoHaW5kZXhlZBgBIAEoCBIMCgRuYW1lGAIgASgJEgwKBHR5cGUY",
            "AyABKAkiWQoJRW50cnlUeXBlEhQKEFVua25vd25FbnRyeVR5cGUQABIPCgtD",
            "b25zdHJ1Y3RvchABEgwKCEZ1bmN0aW9uEAISCQoFRXZlbnQQAxIMCghGYWxs",
            "YmFjaxAEImEKE1N0YXRlTXV0YWJpbGl0eVR5cGUSGQoVVW5rbm93bk11dGFi",
            "aWxpdHlUeXBlEAASCAoEUHVyZRABEggKBFZpZXcQAhIOCgpOb25wYXlhYmxl",
            "EAMSCwoHUGF5YWJsZRAEKjcKC0FjY291bnRUeXBlEgoKBk5vcm1hbBAAEg4K",
            "CkFzc2V0SXNzdWUQARIMCghDb250cmFjdBACKscDCgpSZWFzb25Db2RlEg0K",
            "CVJFUVVFU1RFRBAAEhAKDEJBRF9QUk9UT0NPTBACEhIKDlRPT19NQU5ZX1BF",
            "RVJTEAQSEgoORFVQTElDQVRFX1BFRVIQBRIZChVJTkNPTVBBVElCTEVfUFJP",
            "VE9DT0wQBhIRCg1OVUxMX0lERU5USVRZEAcSEAoMUEVFUl9RVUlUSU5HEAgS",
            "FwoTVU5FWFBFQ1RFRF9JREVOVElUWRAJEhIKDkxPQ0FMX0lERU5USVRZEAoS",
            "EAoMUElOR19USU1FT1VUEAsSDwoLVVNFUl9SRUFTT04QEBIJCgVSRVNFVBAR",
            "Eg0KCVNZTkNfRkFJTBASEg4KCkZFVENIX0ZBSUwQExIKCgZCQURfVFgQFBIN",
            "CglCQURfQkxPQ0sQFRIKCgZGT1JLRUQQFhIOCgpVTkxJTktBQkxFEBcSGAoU",
            "SU5DT01QQVRJQkxFX1ZFUlNJT04QGBIWChJJTkNPTVBBVElCTEVfQ0hBSU4Q",
            "GRIMCghUSU1FX09VVBAgEhAKDENPTk5FQ1RfRkFJTBAhEh8KG1RPT19NQU5Z",
            "X1BFRVJTX1dJVEhfU0FNRV9JUBAiEgwKB1VOS05PV04Q/wFCeQoPb3JnLnRy",
            "b24ucHJvdG9zQghQcm90b2NvbFopZ2l0aHViLmNvbS90cm9ucHJvdG9jb2wv",
            "Z3JwYy1nYXRld2F5L2NvcmWqAjBMYXRva2VuLkN1cnJlbmN5UHJvdmlkZXIu",
            "UHJvdG9jb2wuVHJvbi5HcnBjLkNvcmViBnByb3RvMw=="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { global::Google.Protobuf.WellKnownTypes.AnyReflection.Descriptor, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.DiscoverReflection.Descriptor, },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountType), typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ReasonCode), }, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId.Parser, new[]{ "Name", "Address" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote.Parser, new[]{ "VoteAddress", "VoteCount" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Proposal), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Proposal.Parser, new[]{ "ProposalId", "ProposerAddress", "Parameters", "ExpirationTime", "CreateTime", "Approvals", "State" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Proposal.Types.State) }, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Parser, new[]{ "ChainParameter" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Types.ChainParameter), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Types.ChainParameter.Parser, new[]{ "Key", "Value" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Parser, new[]{ "AccountName", "Type", "Address", "Balance", "Votes", "Asset", "Frozen", "NetUsage", "CreateTime", "LatestOprationTime", "Allowance", "LatestWithdrawTime", "Code", "IsWitness", "IsCommittee", "FrozenSupply", "AssetIssuedName", "LatestAssetOperationTime", "FreeNetUsage", "FreeAssetNetUsage", "LatestConsumeTime", "LatestConsumeFreeTime", "AccountId", "AccountResource", "CodeHash" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen.Parser, new[]{ "FrozenBalance", "ExpireTime" }, null, null, null),
            null, null, null, new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.AccountResource), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.AccountResource.Parser, new[]{ "CpuUsage", "FrozenBalanceForCpu", "LatestConsumeTimeForCpu", "StorageLimit", "StorageUsage", "LatestExchangeStorageTime" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.authority), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.authority.Parser, new[]{ "Account", "PermissionName" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.permission), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.permission.Parser, new[]{ "Account" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Witness), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Witness.Parser, new[]{ "Address", "VoteCount", "PubKey", "Url", "TotalProduced", "TotalMissed", "LatestBlockNum", "LatestSlotNum", "IsJobs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Votes), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Votes.Parser, new[]{ "Address", "OldVotes", "NewVotes" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutput), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutput.Parser, new[]{ "Value", "PubKeyHash" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Parser, new[]{ "RawData", "Signature" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Types.raw), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Types.raw.Parser, new[]{ "TxID", "Vout", "PubKey" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutputs), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutputs.Parser, new[]{ "Outputs" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ResourceReceipt), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ResourceReceipt.Parser, new[]{ "CpuUsage", "CpuFee", "NetUsage", "NetFee", "StorageDelta", "StorageFee" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ResourceReceipt.Types.code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Parser, new[]{ "RawData", "Signature", "Ret" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract.Parser, new[]{ "Type", "Parameter", "Provider", "ContractName" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract.Types.ContractType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result.Parser, new[]{ "Fee", "Ret", "WithdrawAmount", "UnfreezeAmount" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result.Types.code) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.raw), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.raw.Parser, new[]{ "RefBlockBytes", "RefBlockNum", "RefBlockHash", "Expiration", "Auths", "Data", "Contract", "Scripts", "Timestamp", "FeeLimit" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Parser, new[]{ "Id", "Fee", "BlockNumber", "BlockTimeStamp", "ContractResult", "ContractAddress", "Receipt", "Log", "Result", "ResMessage", "WithdrawAmount", "UnfreezeAmount" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.code) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.Log), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.Log.Parser, new[]{ "Address", "Topics", "Data" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transactions), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transactions.Parser, new[]{ "Transactions_" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionSign), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionSign.Parser, new[]{ "Transaction", "PrivateKey" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Parser, new[]{ "RawData", "WitnessSignature" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Types.raw), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Types.raw.Parser, new[]{ "Timestamp", "TxTrieRoot", "ParentHash", "Number", "WitnessId", "WitnessAddress" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Block), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Block.Parser, new[]{ "Transactions", "BlockHeader" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Parser, new[]{ "Ids", "RemainNum" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Types.BlockId), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Types.BlockId.Parser, new[]{ "Hash", "Number" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Parser, new[]{ "Ids", "Type" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.Type) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.BlockId), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.BlockId.Parser, new[]{ "Hash", "Number" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Inventory), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Inventory.Parser, new[]{ "Type", "Ids" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Inventory.Types.InventoryType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Items), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Items.Parser, new[]{ "Type", "Blocks", "BlockHeaders", "Transactions" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Items.Types.ItemType) }, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.DynamicProperties), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.DynamicProperties.Parser, new[]{ "LastSolidityBlockNum" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.DisconnectMessage), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.DisconnectMessage.Parser, new[]{ "Reason" }, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Parser, new[]{ "From", "Version", "Timestamp", "GenesisBlockId", "SolidBlockId", "HeadBlockId" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId.Parser, new[]{ "Hash", "Number" }, null, null, null)}),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.StorageItem), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.StorageItem.Parser, new[]{ "ContractAddress", "Items" }, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Parser, new[]{ "OriginAddress", "ContractAddress", "Abi", "Bytecode", "CallValue", "ConsumeUserResourcePercent", "Name" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Parser, new[]{ "Entrys" }, null, null, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Parser, new[]{ "Anonymous", "Constant", "Name", "Inputs", "Outputs", "Type", "Payable", "StateMutability" }, null, new[]{ typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.EntryType), typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType) }, new pbr::GeneratedClrTypeInfo[] { new pbr::GeneratedClrTypeInfo(typeof(global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param), global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param.Parser, new[]{ "Indexed", "Name", "Type" }, null, null, null)})})})
          }));
    }
    #endregion

  }
  #region Enums
  public enum AccountType {
    [pbr::OriginalName("Normal")] Normal = 0,
    [pbr::OriginalName("AssetIssue")] AssetIssue = 1,
    [pbr::OriginalName("Contract")] Contract = 2,
  }

  public enum ReasonCode {
    [pbr::OriginalName("REQUESTED")] Requested = 0,
    [pbr::OriginalName("BAD_PROTOCOL")] BadProtocol = 2,
    [pbr::OriginalName("TOO_MANY_PEERS")] TooManyPeers = 4,
    [pbr::OriginalName("DUPLICATE_PEER")] DuplicatePeer = 5,
    [pbr::OriginalName("INCOMPATIBLE_PROTOCOL")] IncompatibleProtocol = 6,
    [pbr::OriginalName("NULL_IDENTITY")] NullIdentity = 7,
    [pbr::OriginalName("PEER_QUITING")] PeerQuiting = 8,
    [pbr::OriginalName("UNEXPECTED_IDENTITY")] UnexpectedIdentity = 9,
    [pbr::OriginalName("LOCAL_IDENTITY")] LocalIdentity = 10,
    [pbr::OriginalName("PING_TIMEOUT")] PingTimeout = 11,
    [pbr::OriginalName("USER_REASON")] UserReason = 16,
    [pbr::OriginalName("RESET")] Reset = 17,
    [pbr::OriginalName("SYNC_FAIL")] SyncFail = 18,
    [pbr::OriginalName("FETCH_FAIL")] FetchFail = 19,
    [pbr::OriginalName("BAD_TX")] BadTx = 20,
    [pbr::OriginalName("BAD_BLOCK")] BadBlock = 21,
    [pbr::OriginalName("FORKED")] Forked = 22,
    [pbr::OriginalName("UNLINKABLE")] Unlinkable = 23,
    [pbr::OriginalName("INCOMPATIBLE_VERSION")] IncompatibleVersion = 24,
    [pbr::OriginalName("INCOMPATIBLE_CHAIN")] IncompatibleChain = 25,
    [pbr::OriginalName("TIME_OUT")] TimeOut = 32,
    [pbr::OriginalName("CONNECT_FAIL")] ConnectFail = 33,
    [pbr::OriginalName("TOO_MANY_PEERS_WITH_SAME_IP")] TooManyPeersWithSameIp = 34,
    [pbr::OriginalName("UNKNOWN")] Unknown = 255,
  }

  #endregion

  #region Messages
  /// <summary>
  /// AccountId, (name, address) use name, (null, address) use address, (name, null) use name,
  /// </summary>
  public sealed partial class AccountId : pb::IMessage<AccountId> {
    private static readonly pb::MessageParser<AccountId> _parser = new pb::MessageParser<AccountId>(() => new AccountId());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<AccountId> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountId() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountId(AccountId other) : this() {
      name_ = other.name_;
      address_ = other.address_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public AccountId Clone() {
      return new AccountId(this);
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 1;
    private pb::ByteString name_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 2;
    private pb::ByteString address_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as AccountId);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(AccountId other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Name != other.Name) return false;
      if (Address != other.Address) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Name.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Name);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(Address);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Name);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(AccountId other) {
      if (other == null) {
        return;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Name = input.ReadBytes();
            break;
          }
          case 18: {
            Address = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// vote message
  /// </summary>
  public sealed partial class Vote : pb::IMessage<Vote> {
    private static readonly pb::MessageParser<Vote> _parser = new pb::MessageParser<Vote>(() => new Vote());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Vote> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vote() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vote(Vote other) : this() {
      voteAddress_ = other.voteAddress_;
      voteCount_ = other.voteCount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Vote Clone() {
      return new Vote(this);
    }

    /// <summary>Field number for the "vote_address" field.</summary>
    public const int VoteAddressFieldNumber = 1;
    private pb::ByteString voteAddress_ = pb::ByteString.Empty;
    /// <summary>
    /// the super rep address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString VoteAddress {
      get { return voteAddress_; }
      set {
        voteAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "vote_count" field.</summary>
    public const int VoteCountFieldNumber = 2;
    private long voteCount_;
    /// <summary>
    /// the vote num to this super rep.
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VoteCount {
      get { return voteCount_; }
      set {
        voteCount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Vote);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Vote other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (VoteAddress != other.VoteAddress) return false;
      if (VoteCount != other.VoteCount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (VoteAddress.Length != 0) hash ^= VoteAddress.GetHashCode();
      if (VoteCount != 0L) hash ^= VoteCount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (VoteAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(VoteAddress);
      }
      if (VoteCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(VoteCount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (VoteAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(VoteAddress);
      }
      if (VoteCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VoteCount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Vote other) {
      if (other == null) {
        return;
      }
      if (other.VoteAddress.Length != 0) {
        VoteAddress = other.VoteAddress;
      }
      if (other.VoteCount != 0L) {
        VoteCount = other.VoteCount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            VoteAddress = input.ReadBytes();
            break;
          }
          case 16: {
            VoteCount = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Proposal
  /// </summary>
  public sealed partial class Proposal : pb::IMessage<Proposal> {
    private static readonly pb::MessageParser<Proposal> _parser = new pb::MessageParser<Proposal>(() => new Proposal());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Proposal> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proposal() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proposal(Proposal other) : this() {
      proposalId_ = other.proposalId_;
      proposerAddress_ = other.proposerAddress_;
      parameters_ = other.parameters_.Clone();
      expirationTime_ = other.expirationTime_;
      createTime_ = other.createTime_;
      approvals_ = other.approvals_.Clone();
      state_ = other.state_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Proposal Clone() {
      return new Proposal(this);
    }

    /// <summary>Field number for the "proposal_id" field.</summary>
    public const int ProposalIdFieldNumber = 1;
    private long proposalId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ProposalId {
      get { return proposalId_; }
      set {
        proposalId_ = value;
      }
    }

    /// <summary>Field number for the "proposer_address" field.</summary>
    public const int ProposerAddressFieldNumber = 2;
    private pb::ByteString proposerAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ProposerAddress {
      get { return proposerAddress_; }
      set {
        proposerAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "parameters" field.</summary>
    public const int ParametersFieldNumber = 3;
    private static readonly pbc::MapField<long, long>.Codec _map_parameters_codec
        = new pbc::MapField<long, long>.Codec(pb::FieldCodec.ForInt64(8), pb::FieldCodec.ForInt64(16), 26);
    private readonly pbc::MapField<long, long> parameters_ = new pbc::MapField<long, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<long, long> Parameters {
      get { return parameters_; }
    }

    /// <summary>Field number for the "expiration_time" field.</summary>
    public const int ExpirationTimeFieldNumber = 4;
    private long expirationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ExpirationTime {
      get { return expirationTime_; }
      set {
        expirationTime_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 5;
    private long createTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "approvals" field.</summary>
    public const int ApprovalsFieldNumber = 6;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_approvals_codec
        = pb::FieldCodec.ForBytes(50);
    private readonly pbc::RepeatedField<pb::ByteString> approvals_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Approvals {
      get { return approvals_; }
    }

    /// <summary>Field number for the "state" field.</summary>
    public const int StateFieldNumber = 7;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Proposal.Types.State state_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Proposal.Types.State State {
      get { return state_; }
      set {
        state_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Proposal);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Proposal other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ProposalId != other.ProposalId) return false;
      if (ProposerAddress != other.ProposerAddress) return false;
      if (!Parameters.Equals(other.Parameters)) return false;
      if (ExpirationTime != other.ExpirationTime) return false;
      if (CreateTime != other.CreateTime) return false;
      if(!approvals_.Equals(other.approvals_)) return false;
      if (State != other.State) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ProposalId != 0L) hash ^= ProposalId.GetHashCode();
      if (ProposerAddress.Length != 0) hash ^= ProposerAddress.GetHashCode();
      hash ^= Parameters.GetHashCode();
      if (ExpirationTime != 0L) hash ^= ExpirationTime.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      hash ^= approvals_.GetHashCode();
      if (State != 0) hash ^= State.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ProposalId != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(ProposalId);
      }
      if (ProposerAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ProposerAddress);
      }
      parameters_.WriteTo(output, _map_parameters_codec);
      if (ExpirationTime != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(ExpirationTime);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CreateTime);
      }
      approvals_.WriteTo(output, _repeated_approvals_codec);
      if (State != 0) {
        output.WriteRawTag(56);
        output.WriteEnum((int) State);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ProposalId != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ProposalId);
      }
      if (ProposerAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ProposerAddress);
      }
      size += parameters_.CalculateSize(_map_parameters_codec);
      if (ExpirationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpirationTime);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      size += approvals_.CalculateSize(_repeated_approvals_codec);
      if (State != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) State);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Proposal other) {
      if (other == null) {
        return;
      }
      if (other.ProposalId != 0L) {
        ProposalId = other.ProposalId;
      }
      if (other.ProposerAddress.Length != 0) {
        ProposerAddress = other.ProposerAddress;
      }
      parameters_.Add(other.parameters_);
      if (other.ExpirationTime != 0L) {
        ExpirationTime = other.ExpirationTime;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      approvals_.Add(other.approvals_);
      if (other.State != 0) {
        State = other.State;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ProposalId = input.ReadInt64();
            break;
          }
          case 18: {
            ProposerAddress = input.ReadBytes();
            break;
          }
          case 26: {
            parameters_.AddEntriesFrom(input, _map_parameters_codec);
            break;
          }
          case 32: {
            ExpirationTime = input.ReadInt64();
            break;
          }
          case 40: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 50: {
            approvals_.AddEntriesFrom(input, _repeated_approvals_codec);
            break;
          }
          case 56: {
            state_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Proposal.Types.State) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Proposal message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum State {
        [pbr::OriginalName("PENDING")] Pending = 0,
        [pbr::OriginalName("DISAPPROVED")] Disapproved = 1,
        [pbr::OriginalName("APPROVED")] Approved = 2,
        [pbr::OriginalName("CANCELED")] Canceled = 3,
      }

    }
    #endregion

  }

  public sealed partial class ChainParameters : pb::IMessage<ChainParameters> {
    private static readonly pb::MessageParser<ChainParameters> _parser = new pb::MessageParser<ChainParameters>(() => new ChainParameters());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChainParameters> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainParameters() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainParameters(ChainParameters other) : this() {
      chainParameter_ = other.chainParameter_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainParameters Clone() {
      return new ChainParameters(this);
    }

    /// <summary>Field number for the "chainParameter" field.</summary>
    public const int ChainParameterFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Types.ChainParameter> _repeated_chainParameter_codec
        = pb::FieldCodec.ForMessage(10, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Types.ChainParameter.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Types.ChainParameter> chainParameter_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Types.ChainParameter>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Types.ChainParameter> ChainParameter {
      get { return chainParameter_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChainParameters);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChainParameters other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!chainParameter_.Equals(other.chainParameter_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= chainParameter_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      chainParameter_.WriteTo(output, _repeated_chainParameter_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += chainParameter_.CalculateSize(_repeated_chainParameter_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChainParameters other) {
      if (other == null) {
        return;
      }
      chainParameter_.Add(other.chainParameter_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            chainParameter_.AddEntriesFrom(input, _repeated_chainParameter_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChainParameters message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ChainParameter : pb::IMessage<ChainParameter> {
        private static readonly pb::MessageParser<ChainParameter> _parser = new pb::MessageParser<ChainParameter>(() => new ChainParameter());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ChainParameter> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainParameters.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChainParameter() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChainParameter(ChainParameter other) : this() {
          key_ = other.key_;
          value_ = other.value_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ChainParameter Clone() {
          return new ChainParameter(this);
        }

        /// <summary>Field number for the "key" field.</summary>
        public const int KeyFieldNumber = 1;
        private string key_ = "";
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public string Key {
          get { return key_; }
          set {
            key_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "value" field.</summary>
        public const int ValueFieldNumber = 2;
        private long value_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Value {
          get { return value_; }
          set {
            value_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ChainParameter);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ChainParameter other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Key != other.Key) return false;
          if (Value != other.Value) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Key.Length != 0) hash ^= Key.GetHashCode();
          if (Value != 0L) hash ^= Value.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Key.Length != 0) {
            output.WriteRawTag(10);
            output.WriteString(Key);
          }
          if (Value != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Value);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Key.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeStringSize(Key);
          }
          if (Value != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ChainParameter other) {
          if (other == null) {
            return;
          }
          if (other.Key.Length != 0) {
            Key = other.Key;
          }
          if (other.Value != 0L) {
            Value = other.Value;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Key = input.ReadString();
                break;
              }
              case 16: {
                Value = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Account 
  /// </summary>
  public sealed partial class Account : pb::IMessage<Account> {
    private static readonly pb::MessageParser<Account> _parser = new pb::MessageParser<Account>(() => new Account());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Account> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account(Account other) : this() {
      accountName_ = other.accountName_;
      type_ = other.type_;
      address_ = other.address_;
      balance_ = other.balance_;
      votes_ = other.votes_.Clone();
      asset_ = other.asset_.Clone();
      frozen_ = other.frozen_.Clone();
      netUsage_ = other.netUsage_;
      createTime_ = other.createTime_;
      latestOprationTime_ = other.latestOprationTime_;
      allowance_ = other.allowance_;
      latestWithdrawTime_ = other.latestWithdrawTime_;
      code_ = other.code_;
      isWitness_ = other.isWitness_;
      isCommittee_ = other.isCommittee_;
      frozenSupply_ = other.frozenSupply_.Clone();
      assetIssuedName_ = other.assetIssuedName_;
      latestAssetOperationTime_ = other.latestAssetOperationTime_.Clone();
      freeNetUsage_ = other.freeNetUsage_;
      freeAssetNetUsage_ = other.freeAssetNetUsage_.Clone();
      latestConsumeTime_ = other.latestConsumeTime_;
      latestConsumeFreeTime_ = other.latestConsumeFreeTime_;
      accountId_ = other.accountId_;
      AccountResource = other.accountResource_ != null ? other.AccountResource.Clone() : null;
      codeHash_ = other.codeHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Account Clone() {
      return new Account(this);
    }

    /// <summary>Field number for the "account_name" field.</summary>
    public const int AccountNameFieldNumber = 1;
    private pb::ByteString accountName_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountName {
      get { return accountName_; }
      set {
        accountName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 3;
    private pb::ByteString address_ = pb::ByteString.Empty;
    /// <summary>
    /// the create address
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "balance" field.</summary>
    public const int BalanceFieldNumber = 4;
    private long balance_;
    /// <summary>
    /// the trx balance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Balance {
      get { return balance_; }
      set {
        balance_ = value;
      }
    }

    /// <summary>Field number for the "votes" field.</summary>
    public const int VotesFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> _repeated_votes_codec
        = pb::FieldCodec.ForMessage(42, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> votes_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote>();
    /// <summary>
    /// the votes
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> Votes {
      get { return votes_; }
    }

    /// <summary>Field number for the "asset" field.</summary>
    public const int AssetFieldNumber = 6;
    private static readonly pbc::MapField<string, long>.Codec _map_asset_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 50);
    private readonly pbc::MapField<string, long> asset_ = new pbc::MapField<string, long>();
    /// <summary>
    /// the other asset owned by this account
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> Asset {
      get { return asset_; }
    }

    /// <summary>Field number for the "frozen" field.</summary>
    public const int FrozenFieldNumber = 7;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen> _repeated_frozen_codec
        = pb::FieldCodec.ForMessage(58, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen> frozen_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen>();
    /// <summary>
    /// the frozen balance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen> Frozen {
      get { return frozen_; }
    }

    /// <summary>Field number for the "net_usage" field.</summary>
    public const int NetUsageFieldNumber = 8;
    private long netUsage_;
    /// <summary>
    /// bandwidth, get from frozen
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsage {
      get { return netUsage_; }
      set {
        netUsage_ = value;
      }
    }

    /// <summary>Field number for the "create_time" field.</summary>
    public const int CreateTimeFieldNumber = 9;
    private long createTime_;
    /// <summary>
    /// this account create time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CreateTime {
      get { return createTime_; }
      set {
        createTime_ = value;
      }
    }

    /// <summary>Field number for the "latest_opration_time" field.</summary>
    public const int LatestOprationTimeFieldNumber = 10;
    private long latestOprationTime_;
    /// <summary>
    /// this last operation time, including transfer, voting and so on. //FIXME fix grammar
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatestOprationTime {
      get { return latestOprationTime_; }
      set {
        latestOprationTime_ = value;
      }
    }

    /// <summary>Field number for the "allowance" field.</summary>
    public const int AllowanceFieldNumber = 11;
    private long allowance_;
    /// <summary>
    /// witness block producing allowance
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Allowance {
      get { return allowance_; }
      set {
        allowance_ = value;
      }
    }

    /// <summary>Field number for the "latest_withdraw_time" field.</summary>
    public const int LatestWithdrawTimeFieldNumber = 12;
    private long latestWithdrawTime_;
    /// <summary>
    /// last withdraw time
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatestWithdrawTime {
      get { return latestWithdrawTime_; }
      set {
        latestWithdrawTime_ = value;
      }
    }

    /// <summary>Field number for the "code" field.</summary>
    public const int CodeFieldNumber = 13;
    private pb::ByteString code_ = pb::ByteString.Empty;
    /// <summary>
    /// not used so far
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Code {
      get { return code_; }
      set {
        code_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "is_witness" field.</summary>
    public const int IsWitnessFieldNumber = 14;
    private bool isWitness_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsWitness {
      get { return isWitness_; }
      set {
        isWitness_ = value;
      }
    }

    /// <summary>Field number for the "is_committee" field.</summary>
    public const int IsCommitteeFieldNumber = 15;
    private bool isCommittee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsCommittee {
      get { return isCommittee_; }
      set {
        isCommittee_ = value;
      }
    }

    /// <summary>Field number for the "frozen_supply" field.</summary>
    public const int FrozenSupplyFieldNumber = 16;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen> _repeated_frozenSupply_codec
        = pb::FieldCodec.ForMessage(130, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen> frozenSupply_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen>();
    /// <summary>
    /// frozen asset(for asset issuer)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen> FrozenSupply {
      get { return frozenSupply_; }
    }

    /// <summary>Field number for the "asset_issued_name" field.</summary>
    public const int AssetIssuedNameFieldNumber = 17;
    private pb::ByteString assetIssuedName_ = pb::ByteString.Empty;
    /// <summary>
    /// asset_issued_name
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AssetIssuedName {
      get { return assetIssuedName_; }
      set {
        assetIssuedName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "latest_asset_operation_time" field.</summary>
    public const int LatestAssetOperationTimeFieldNumber = 18;
    private static readonly pbc::MapField<string, long>.Codec _map_latestAssetOperationTime_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 146);
    private readonly pbc::MapField<string, long> latestAssetOperationTime_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> LatestAssetOperationTime {
      get { return latestAssetOperationTime_; }
    }

    /// <summary>Field number for the "free_net_usage" field.</summary>
    public const int FreeNetUsageFieldNumber = 19;
    private long freeNetUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long FreeNetUsage {
      get { return freeNetUsage_; }
      set {
        freeNetUsage_ = value;
      }
    }

    /// <summary>Field number for the "free_asset_net_usage" field.</summary>
    public const int FreeAssetNetUsageFieldNumber = 20;
    private static readonly pbc::MapField<string, long>.Codec _map_freeAssetNetUsage_codec
        = new pbc::MapField<string, long>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForInt64(16), 162);
    private readonly pbc::MapField<string, long> freeAssetNetUsage_ = new pbc::MapField<string, long>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, long> FreeAssetNetUsage {
      get { return freeAssetNetUsage_; }
    }

    /// <summary>Field number for the "latest_consume_time" field.</summary>
    public const int LatestConsumeTimeFieldNumber = 21;
    private long latestConsumeTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatestConsumeTime {
      get { return latestConsumeTime_; }
      set {
        latestConsumeTime_ = value;
      }
    }

    /// <summary>Field number for the "latest_consume_free_time" field.</summary>
    public const int LatestConsumeFreeTimeFieldNumber = 22;
    private long latestConsumeFreeTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatestConsumeFreeTime {
      get { return latestConsumeFreeTime_; }
      set {
        latestConsumeFreeTime_ = value;
      }
    }

    /// <summary>Field number for the "account_id" field.</summary>
    public const int AccountIdFieldNumber = 23;
    private pb::ByteString accountId_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString AccountId {
      get { return accountId_; }
      set {
        accountId_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "account_resource" field.</summary>
    public const int AccountResourceFieldNumber = 26;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.AccountResource accountResource_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.AccountResource AccountResource {
      get { return accountResource_; }
      set {
        accountResource_ = value;
      }
    }

    /// <summary>Field number for the "codeHash" field.</summary>
    public const int CodeHashFieldNumber = 30;
    private pb::ByteString codeHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString CodeHash {
      get { return codeHash_; }
      set {
        codeHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Account);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Account other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (AccountName != other.AccountName) return false;
      if (Type != other.Type) return false;
      if (Address != other.Address) return false;
      if (Balance != other.Balance) return false;
      if(!votes_.Equals(other.votes_)) return false;
      if (!Asset.Equals(other.Asset)) return false;
      if(!frozen_.Equals(other.frozen_)) return false;
      if (NetUsage != other.NetUsage) return false;
      if (CreateTime != other.CreateTime) return false;
      if (LatestOprationTime != other.LatestOprationTime) return false;
      if (Allowance != other.Allowance) return false;
      if (LatestWithdrawTime != other.LatestWithdrawTime) return false;
      if (Code != other.Code) return false;
      if (IsWitness != other.IsWitness) return false;
      if (IsCommittee != other.IsCommittee) return false;
      if(!frozenSupply_.Equals(other.frozenSupply_)) return false;
      if (AssetIssuedName != other.AssetIssuedName) return false;
      if (!LatestAssetOperationTime.Equals(other.LatestAssetOperationTime)) return false;
      if (FreeNetUsage != other.FreeNetUsage) return false;
      if (!FreeAssetNetUsage.Equals(other.FreeAssetNetUsage)) return false;
      if (LatestConsumeTime != other.LatestConsumeTime) return false;
      if (LatestConsumeFreeTime != other.LatestConsumeFreeTime) return false;
      if (AccountId != other.AccountId) return false;
      if (!object.Equals(AccountResource, other.AccountResource)) return false;
      if (CodeHash != other.CodeHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (AccountName.Length != 0) hash ^= AccountName.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (Balance != 0L) hash ^= Balance.GetHashCode();
      hash ^= votes_.GetHashCode();
      hash ^= Asset.GetHashCode();
      hash ^= frozen_.GetHashCode();
      if (NetUsage != 0L) hash ^= NetUsage.GetHashCode();
      if (CreateTime != 0L) hash ^= CreateTime.GetHashCode();
      if (LatestOprationTime != 0L) hash ^= LatestOprationTime.GetHashCode();
      if (Allowance != 0L) hash ^= Allowance.GetHashCode();
      if (LatestWithdrawTime != 0L) hash ^= LatestWithdrawTime.GetHashCode();
      if (Code.Length != 0) hash ^= Code.GetHashCode();
      if (IsWitness != false) hash ^= IsWitness.GetHashCode();
      if (IsCommittee != false) hash ^= IsCommittee.GetHashCode();
      hash ^= frozenSupply_.GetHashCode();
      if (AssetIssuedName.Length != 0) hash ^= AssetIssuedName.GetHashCode();
      hash ^= LatestAssetOperationTime.GetHashCode();
      if (FreeNetUsage != 0L) hash ^= FreeNetUsage.GetHashCode();
      hash ^= FreeAssetNetUsage.GetHashCode();
      if (LatestConsumeTime != 0L) hash ^= LatestConsumeTime.GetHashCode();
      if (LatestConsumeFreeTime != 0L) hash ^= LatestConsumeFreeTime.GetHashCode();
      if (AccountId.Length != 0) hash ^= AccountId.GetHashCode();
      if (accountResource_ != null) hash ^= AccountResource.GetHashCode();
      if (CodeHash.Length != 0) hash ^= CodeHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (AccountName.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(AccountName);
      }
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (Address.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(Address);
      }
      if (Balance != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(Balance);
      }
      votes_.WriteTo(output, _repeated_votes_codec);
      asset_.WriteTo(output, _map_asset_codec);
      frozen_.WriteTo(output, _repeated_frozen_codec);
      if (NetUsage != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(NetUsage);
      }
      if (CreateTime != 0L) {
        output.WriteRawTag(72);
        output.WriteInt64(CreateTime);
      }
      if (LatestOprationTime != 0L) {
        output.WriteRawTag(80);
        output.WriteInt64(LatestOprationTime);
      }
      if (Allowance != 0L) {
        output.WriteRawTag(88);
        output.WriteInt64(Allowance);
      }
      if (LatestWithdrawTime != 0L) {
        output.WriteRawTag(96);
        output.WriteInt64(LatestWithdrawTime);
      }
      if (Code.Length != 0) {
        output.WriteRawTag(106);
        output.WriteBytes(Code);
      }
      if (IsWitness != false) {
        output.WriteRawTag(112);
        output.WriteBool(IsWitness);
      }
      if (IsCommittee != false) {
        output.WriteRawTag(120);
        output.WriteBool(IsCommittee);
      }
      frozenSupply_.WriteTo(output, _repeated_frozenSupply_codec);
      if (AssetIssuedName.Length != 0) {
        output.WriteRawTag(138, 1);
        output.WriteBytes(AssetIssuedName);
      }
      latestAssetOperationTime_.WriteTo(output, _map_latestAssetOperationTime_codec);
      if (FreeNetUsage != 0L) {
        output.WriteRawTag(152, 1);
        output.WriteInt64(FreeNetUsage);
      }
      freeAssetNetUsage_.WriteTo(output, _map_freeAssetNetUsage_codec);
      if (LatestConsumeTime != 0L) {
        output.WriteRawTag(168, 1);
        output.WriteInt64(LatestConsumeTime);
      }
      if (LatestConsumeFreeTime != 0L) {
        output.WriteRawTag(176, 1);
        output.WriteInt64(LatestConsumeFreeTime);
      }
      if (AccountId.Length != 0) {
        output.WriteRawTag(186, 1);
        output.WriteBytes(AccountId);
      }
      if (accountResource_ != null) {
        output.WriteRawTag(210, 1);
        output.WriteMessage(AccountResource);
      }
      if (CodeHash.Length != 0) {
        output.WriteRawTag(242, 1);
        output.WriteBytes(CodeHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (AccountName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(AccountName);
      }
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
      }
      if (Balance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Balance);
      }
      size += votes_.CalculateSize(_repeated_votes_codec);
      size += asset_.CalculateSize(_map_asset_codec);
      size += frozen_.CalculateSize(_repeated_frozen_codec);
      if (NetUsage != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsage);
      }
      if (CreateTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CreateTime);
      }
      if (LatestOprationTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestOprationTime);
      }
      if (Allowance != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Allowance);
      }
      if (LatestWithdrawTime != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestWithdrawTime);
      }
      if (Code.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Code);
      }
      if (IsWitness != false) {
        size += 1 + 1;
      }
      if (IsCommittee != false) {
        size += 1 + 1;
      }
      size += frozenSupply_.CalculateSize(_repeated_frozenSupply_codec);
      if (AssetIssuedName.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(AssetIssuedName);
      }
      size += latestAssetOperationTime_.CalculateSize(_map_latestAssetOperationTime_codec);
      if (FreeNetUsage != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(FreeNetUsage);
      }
      size += freeAssetNetUsage_.CalculateSize(_map_freeAssetNetUsage_codec);
      if (LatestConsumeTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LatestConsumeTime);
      }
      if (LatestConsumeFreeTime != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(LatestConsumeFreeTime);
      }
      if (AccountId.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(AccountId);
      }
      if (accountResource_ != null) {
        size += 2 + pb::CodedOutputStream.ComputeMessageSize(AccountResource);
      }
      if (CodeHash.Length != 0) {
        size += 2 + pb::CodedOutputStream.ComputeBytesSize(CodeHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Account other) {
      if (other == null) {
        return;
      }
      if (other.AccountName.Length != 0) {
        AccountName = other.AccountName;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.Balance != 0L) {
        Balance = other.Balance;
      }
      votes_.Add(other.votes_);
      asset_.Add(other.asset_);
      frozen_.Add(other.frozen_);
      if (other.NetUsage != 0L) {
        NetUsage = other.NetUsage;
      }
      if (other.CreateTime != 0L) {
        CreateTime = other.CreateTime;
      }
      if (other.LatestOprationTime != 0L) {
        LatestOprationTime = other.LatestOprationTime;
      }
      if (other.Allowance != 0L) {
        Allowance = other.Allowance;
      }
      if (other.LatestWithdrawTime != 0L) {
        LatestWithdrawTime = other.LatestWithdrawTime;
      }
      if (other.Code.Length != 0) {
        Code = other.Code;
      }
      if (other.IsWitness != false) {
        IsWitness = other.IsWitness;
      }
      if (other.IsCommittee != false) {
        IsCommittee = other.IsCommittee;
      }
      frozenSupply_.Add(other.frozenSupply_);
      if (other.AssetIssuedName.Length != 0) {
        AssetIssuedName = other.AssetIssuedName;
      }
      latestAssetOperationTime_.Add(other.latestAssetOperationTime_);
      if (other.FreeNetUsage != 0L) {
        FreeNetUsage = other.FreeNetUsage;
      }
      freeAssetNetUsage_.Add(other.freeAssetNetUsage_);
      if (other.LatestConsumeTime != 0L) {
        LatestConsumeTime = other.LatestConsumeTime;
      }
      if (other.LatestConsumeFreeTime != 0L) {
        LatestConsumeFreeTime = other.LatestConsumeFreeTime;
      }
      if (other.AccountId.Length != 0) {
        AccountId = other.AccountId;
      }
      if (other.accountResource_ != null) {
        if (accountResource_ == null) {
          accountResource_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.AccountResource();
        }
        AccountResource.MergeFrom(other.AccountResource);
      }
      if (other.CodeHash.Length != 0) {
        CodeHash = other.CodeHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            AccountName = input.ReadBytes();
            break;
          }
          case 16: {
            type_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountType) input.ReadEnum();
            break;
          }
          case 26: {
            Address = input.ReadBytes();
            break;
          }
          case 32: {
            Balance = input.ReadInt64();
            break;
          }
          case 42: {
            votes_.AddEntriesFrom(input, _repeated_votes_codec);
            break;
          }
          case 50: {
            asset_.AddEntriesFrom(input, _map_asset_codec);
            break;
          }
          case 58: {
            frozen_.AddEntriesFrom(input, _repeated_frozen_codec);
            break;
          }
          case 64: {
            NetUsage = input.ReadInt64();
            break;
          }
          case 72: {
            CreateTime = input.ReadInt64();
            break;
          }
          case 80: {
            LatestOprationTime = input.ReadInt64();
            break;
          }
          case 88: {
            Allowance = input.ReadInt64();
            break;
          }
          case 96: {
            LatestWithdrawTime = input.ReadInt64();
            break;
          }
          case 106: {
            Code = input.ReadBytes();
            break;
          }
          case 112: {
            IsWitness = input.ReadBool();
            break;
          }
          case 120: {
            IsCommittee = input.ReadBool();
            break;
          }
          case 130: {
            frozenSupply_.AddEntriesFrom(input, _repeated_frozenSupply_codec);
            break;
          }
          case 138: {
            AssetIssuedName = input.ReadBytes();
            break;
          }
          case 146: {
            latestAssetOperationTime_.AddEntriesFrom(input, _map_latestAssetOperationTime_codec);
            break;
          }
          case 152: {
            FreeNetUsage = input.ReadInt64();
            break;
          }
          case 162: {
            freeAssetNetUsage_.AddEntriesFrom(input, _map_freeAssetNetUsage_codec);
            break;
          }
          case 168: {
            LatestConsumeTime = input.ReadInt64();
            break;
          }
          case 176: {
            LatestConsumeFreeTime = input.ReadInt64();
            break;
          }
          case 186: {
            AccountId = input.ReadBytes();
            break;
          }
          case 210: {
            if (accountResource_ == null) {
              accountResource_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.AccountResource();
            }
            input.ReadMessage(accountResource_);
            break;
          }
          case 242: {
            CodeHash = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Account message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      /// <summary>
      /// frozen balance 
      /// </summary>
      public sealed partial class Frozen : pb::IMessage<Frozen> {
        private static readonly pb::MessageParser<Frozen> _parser = new pb::MessageParser<Frozen>(() => new Frozen());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Frozen> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Frozen() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Frozen(Frozen other) : this() {
          frozenBalance_ = other.frozenBalance_;
          expireTime_ = other.expireTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Frozen Clone() {
          return new Frozen(this);
        }

        /// <summary>Field number for the "frozen_balance" field.</summary>
        public const int FrozenBalanceFieldNumber = 1;
        private long frozenBalance_;
        /// <summary>
        /// the frozen trx balance
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long FrozenBalance {
          get { return frozenBalance_; }
          set {
            frozenBalance_ = value;
          }
        }

        /// <summary>Field number for the "expire_time" field.</summary>
        public const int ExpireTimeFieldNumber = 2;
        private long expireTime_;
        /// <summary>
        /// the expire time
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long ExpireTime {
          get { return expireTime_; }
          set {
            expireTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Frozen);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Frozen other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (FrozenBalance != other.FrozenBalance) return false;
          if (ExpireTime != other.ExpireTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (FrozenBalance != 0L) hash ^= FrozenBalance.GetHashCode();
          if (ExpireTime != 0L) hash ^= ExpireTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (FrozenBalance != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(FrozenBalance);
          }
          if (ExpireTime != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(ExpireTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (FrozenBalance != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(FrozenBalance);
          }
          if (ExpireTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(ExpireTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Frozen other) {
          if (other == null) {
            return;
          }
          if (other.FrozenBalance != 0L) {
            FrozenBalance = other.FrozenBalance;
          }
          if (other.ExpireTime != 0L) {
            ExpireTime = other.ExpireTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                FrozenBalance = input.ReadInt64();
                break;
              }
              case 16: {
                ExpireTime = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

      public sealed partial class AccountResource : pb::IMessage<AccountResource> {
        private static readonly pb::MessageParser<AccountResource> _parser = new pb::MessageParser<AccountResource>(() => new AccountResource());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<AccountResource> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Descriptor.NestedTypes[4]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccountResource() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccountResource(AccountResource other) : this() {
          cpuUsage_ = other.cpuUsage_;
          FrozenBalanceForCpu = other.frozenBalanceForCpu_ != null ? other.FrozenBalanceForCpu.Clone() : null;
          latestConsumeTimeForCpu_ = other.latestConsumeTimeForCpu_;
          storageLimit_ = other.storageLimit_;
          storageUsage_ = other.storageUsage_;
          latestExchangeStorageTime_ = other.latestExchangeStorageTime_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public AccountResource Clone() {
          return new AccountResource(this);
        }

        /// <summary>Field number for the "cpu_usage" field.</summary>
        public const int CpuUsageFieldNumber = 1;
        private long cpuUsage_;
        /// <summary>
        /// cpu resource, get from frozen
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long CpuUsage {
          get { return cpuUsage_; }
          set {
            cpuUsage_ = value;
          }
        }

        /// <summary>Field number for the "frozen_balance_for_cpu" field.</summary>
        public const int FrozenBalanceForCpuFieldNumber = 2;
        private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen frozenBalanceForCpu_;
        /// <summary>
        /// the frozen balance for cpu
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen FrozenBalanceForCpu {
          get { return frozenBalanceForCpu_; }
          set {
            frozenBalanceForCpu_ = value;
          }
        }

        /// <summary>Field number for the "latest_consume_time_for_cpu" field.</summary>
        public const int LatestConsumeTimeForCpuFieldNumber = 3;
        private long latestConsumeTimeForCpu_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LatestConsumeTimeForCpu {
          get { return latestConsumeTimeForCpu_; }
          set {
            latestConsumeTimeForCpu_ = value;
          }
        }

        /// <summary>Field number for the "storage_limit" field.</summary>
        public const int StorageLimitFieldNumber = 6;
        private long storageLimit_;
        /// <summary>
        /// storage resource, get from market
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StorageLimit {
          get { return storageLimit_; }
          set {
            storageLimit_ = value;
          }
        }

        /// <summary>Field number for the "storage_usage" field.</summary>
        public const int StorageUsageFieldNumber = 7;
        private long storageUsage_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long StorageUsage {
          get { return storageUsage_; }
          set {
            storageUsage_ = value;
          }
        }

        /// <summary>Field number for the "latest_exchange_storage_time" field.</summary>
        public const int LatestExchangeStorageTimeFieldNumber = 8;
        private long latestExchangeStorageTime_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long LatestExchangeStorageTime {
          get { return latestExchangeStorageTime_; }
          set {
            latestExchangeStorageTime_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as AccountResource);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(AccountResource other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (CpuUsage != other.CpuUsage) return false;
          if (!object.Equals(FrozenBalanceForCpu, other.FrozenBalanceForCpu)) return false;
          if (LatestConsumeTimeForCpu != other.LatestConsumeTimeForCpu) return false;
          if (StorageLimit != other.StorageLimit) return false;
          if (StorageUsage != other.StorageUsage) return false;
          if (LatestExchangeStorageTime != other.LatestExchangeStorageTime) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (CpuUsage != 0L) hash ^= CpuUsage.GetHashCode();
          if (frozenBalanceForCpu_ != null) hash ^= FrozenBalanceForCpu.GetHashCode();
          if (LatestConsumeTimeForCpu != 0L) hash ^= LatestConsumeTimeForCpu.GetHashCode();
          if (StorageLimit != 0L) hash ^= StorageLimit.GetHashCode();
          if (StorageUsage != 0L) hash ^= StorageUsage.GetHashCode();
          if (LatestExchangeStorageTime != 0L) hash ^= LatestExchangeStorageTime.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (CpuUsage != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(CpuUsage);
          }
          if (frozenBalanceForCpu_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(FrozenBalanceForCpu);
          }
          if (LatestConsumeTimeForCpu != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(LatestConsumeTimeForCpu);
          }
          if (StorageLimit != 0L) {
            output.WriteRawTag(48);
            output.WriteInt64(StorageLimit);
          }
          if (StorageUsage != 0L) {
            output.WriteRawTag(56);
            output.WriteInt64(StorageUsage);
          }
          if (LatestExchangeStorageTime != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(LatestExchangeStorageTime);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (CpuUsage != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpuUsage);
          }
          if (frozenBalanceForCpu_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(FrozenBalanceForCpu);
          }
          if (LatestConsumeTimeForCpu != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestConsumeTimeForCpu);
          }
          if (StorageLimit != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StorageLimit);
          }
          if (StorageUsage != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(StorageUsage);
          }
          if (LatestExchangeStorageTime != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestExchangeStorageTime);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(AccountResource other) {
          if (other == null) {
            return;
          }
          if (other.CpuUsage != 0L) {
            CpuUsage = other.CpuUsage;
          }
          if (other.frozenBalanceForCpu_ != null) {
            if (frozenBalanceForCpu_ == null) {
              frozenBalanceForCpu_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen();
            }
            FrozenBalanceForCpu.MergeFrom(other.FrozenBalanceForCpu);
          }
          if (other.LatestConsumeTimeForCpu != 0L) {
            LatestConsumeTimeForCpu = other.LatestConsumeTimeForCpu;
          }
          if (other.StorageLimit != 0L) {
            StorageLimit = other.StorageLimit;
          }
          if (other.StorageUsage != 0L) {
            StorageUsage = other.StorageUsage;
          }
          if (other.LatestExchangeStorageTime != 0L) {
            LatestExchangeStorageTime = other.LatestExchangeStorageTime;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                CpuUsage = input.ReadInt64();
                break;
              }
              case 18: {
                if (frozenBalanceForCpu_ == null) {
                  frozenBalanceForCpu_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Account.Types.Frozen();
                }
                input.ReadMessage(frozenBalanceForCpu_);
                break;
              }
              case 24: {
                LatestConsumeTimeForCpu = input.ReadInt64();
                break;
              }
              case 48: {
                StorageLimit = input.ReadInt64();
                break;
              }
              case 56: {
                StorageUsage = input.ReadInt64();
                break;
              }
              case 64: {
                LatestExchangeStorageTime = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class authority : pb::IMessage<authority> {
    private static readonly pb::MessageParser<authority> _parser = new pb::MessageParser<authority>(() => new authority());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<authority> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public authority() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public authority(authority other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      permissionName_ = other.permissionName_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public authority Clone() {
      return new authority(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    /// <summary>Field number for the "permission_name" field.</summary>
    public const int PermissionNameFieldNumber = 2;
    private pb::ByteString permissionName_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PermissionName {
      get { return permissionName_; }
      set {
        permissionName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as authority);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(authority other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      if (PermissionName != other.PermissionName) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (PermissionName.Length != 0) hash ^= PermissionName.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (PermissionName.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PermissionName);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (PermissionName.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PermissionName);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(authority other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId();
        }
        Account.MergeFrom(other.Account);
      }
      if (other.PermissionName.Length != 0) {
        PermissionName = other.PermissionName;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId();
            }
            input.ReadMessage(account_);
            break;
          }
          case 18: {
            PermissionName = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class permission : pb::IMessage<permission> {
    private static readonly pb::MessageParser<permission> _parser = new pb::MessageParser<permission>(() => new permission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<permission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public permission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public permission(permission other) : this() {
      Account = other.account_ != null ? other.Account.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public permission Clone() {
      return new permission(this);
    }

    /// <summary>Field number for the "account" field.</summary>
    public const int AccountFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId account_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId Account {
      get { return account_; }
      set {
        account_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as permission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(permission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Account, other.Account)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (account_ != null) hash ^= Account.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (account_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Account);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (account_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Account);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(permission other) {
      if (other == null) {
        return;
      }
      if (other.account_ != null) {
        if (account_ == null) {
          account_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId();
        }
        Account.MergeFrom(other.Account);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (account_ == null) {
              account_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.AccountId();
            }
            input.ReadMessage(account_);
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Witness
  /// </summary>
  public sealed partial class Witness : pb::IMessage<Witness> {
    private static readonly pb::MessageParser<Witness> _parser = new pb::MessageParser<Witness>(() => new Witness());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Witness> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Witness() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Witness(Witness other) : this() {
      address_ = other.address_;
      voteCount_ = other.voteCount_;
      pubKey_ = other.pubKey_;
      url_ = other.url_;
      totalProduced_ = other.totalProduced_;
      totalMissed_ = other.totalMissed_;
      latestBlockNum_ = other.latestBlockNum_;
      latestSlotNum_ = other.latestSlotNum_;
      isJobs_ = other.isJobs_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Witness Clone() {
      return new Witness(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private pb::ByteString address_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "voteCount" field.</summary>
    public const int VoteCountFieldNumber = 2;
    private long voteCount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long VoteCount {
      get { return voteCount_; }
      set {
        voteCount_ = value;
      }
    }

    /// <summary>Field number for the "pubKey" field.</summary>
    public const int PubKeyFieldNumber = 3;
    private pb::ByteString pubKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PubKey {
      get { return pubKey_; }
      set {
        pubKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "url" field.</summary>
    public const int UrlFieldNumber = 4;
    private string url_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Url {
      get { return url_; }
      set {
        url_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "totalProduced" field.</summary>
    public const int TotalProducedFieldNumber = 5;
    private long totalProduced_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalProduced {
      get { return totalProduced_; }
      set {
        totalProduced_ = value;
      }
    }

    /// <summary>Field number for the "totalMissed" field.</summary>
    public const int TotalMissedFieldNumber = 6;
    private long totalMissed_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long TotalMissed {
      get { return totalMissed_; }
      set {
        totalMissed_ = value;
      }
    }

    /// <summary>Field number for the "latestBlockNum" field.</summary>
    public const int LatestBlockNumFieldNumber = 7;
    private long latestBlockNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatestBlockNum {
      get { return latestBlockNum_; }
      set {
        latestBlockNum_ = value;
      }
    }

    /// <summary>Field number for the "latestSlotNum" field.</summary>
    public const int LatestSlotNumFieldNumber = 8;
    private long latestSlotNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LatestSlotNum {
      get { return latestSlotNum_; }
      set {
        latestSlotNum_ = value;
      }
    }

    /// <summary>Field number for the "isJobs" field.</summary>
    public const int IsJobsFieldNumber = 9;
    private bool isJobs_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool IsJobs {
      get { return isJobs_; }
      set {
        isJobs_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Witness);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Witness other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if (VoteCount != other.VoteCount) return false;
      if (PubKey != other.PubKey) return false;
      if (Url != other.Url) return false;
      if (TotalProduced != other.TotalProduced) return false;
      if (TotalMissed != other.TotalMissed) return false;
      if (LatestBlockNum != other.LatestBlockNum) return false;
      if (LatestSlotNum != other.LatestSlotNum) return false;
      if (IsJobs != other.IsJobs) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      if (VoteCount != 0L) hash ^= VoteCount.GetHashCode();
      if (PubKey.Length != 0) hash ^= PubKey.GetHashCode();
      if (Url.Length != 0) hash ^= Url.GetHashCode();
      if (TotalProduced != 0L) hash ^= TotalProduced.GetHashCode();
      if (TotalMissed != 0L) hash ^= TotalMissed.GetHashCode();
      if (LatestBlockNum != 0L) hash ^= LatestBlockNum.GetHashCode();
      if (LatestSlotNum != 0L) hash ^= LatestSlotNum.GetHashCode();
      if (IsJobs != false) hash ^= IsJobs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Address);
      }
      if (VoteCount != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(VoteCount);
      }
      if (PubKey.Length != 0) {
        output.WriteRawTag(26);
        output.WriteBytes(PubKey);
      }
      if (Url.Length != 0) {
        output.WriteRawTag(34);
        output.WriteString(Url);
      }
      if (TotalProduced != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(TotalProduced);
      }
      if (TotalMissed != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(TotalMissed);
      }
      if (LatestBlockNum != 0L) {
        output.WriteRawTag(56);
        output.WriteInt64(LatestBlockNum);
      }
      if (LatestSlotNum != 0L) {
        output.WriteRawTag(64);
        output.WriteInt64(LatestSlotNum);
      }
      if (IsJobs != false) {
        output.WriteRawTag(72);
        output.WriteBool(IsJobs);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
      }
      if (VoteCount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(VoteCount);
      }
      if (PubKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubKey);
      }
      if (Url.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Url);
      }
      if (TotalProduced != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalProduced);
      }
      if (TotalMissed != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(TotalMissed);
      }
      if (LatestBlockNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestBlockNum);
      }
      if (LatestSlotNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LatestSlotNum);
      }
      if (IsJobs != false) {
        size += 1 + 1;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Witness other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      if (other.VoteCount != 0L) {
        VoteCount = other.VoteCount;
      }
      if (other.PubKey.Length != 0) {
        PubKey = other.PubKey;
      }
      if (other.Url.Length != 0) {
        Url = other.Url;
      }
      if (other.TotalProduced != 0L) {
        TotalProduced = other.TotalProduced;
      }
      if (other.TotalMissed != 0L) {
        TotalMissed = other.TotalMissed;
      }
      if (other.LatestBlockNum != 0L) {
        LatestBlockNum = other.LatestBlockNum;
      }
      if (other.LatestSlotNum != 0L) {
        LatestSlotNum = other.LatestSlotNum;
      }
      if (other.IsJobs != false) {
        IsJobs = other.IsJobs;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadBytes();
            break;
          }
          case 16: {
            VoteCount = input.ReadInt64();
            break;
          }
          case 26: {
            PubKey = input.ReadBytes();
            break;
          }
          case 34: {
            Url = input.ReadString();
            break;
          }
          case 40: {
            TotalProduced = input.ReadInt64();
            break;
          }
          case 48: {
            TotalMissed = input.ReadInt64();
            break;
          }
          case 56: {
            LatestBlockNum = input.ReadInt64();
            break;
          }
          case 64: {
            LatestSlotNum = input.ReadInt64();
            break;
          }
          case 72: {
            IsJobs = input.ReadBool();
            break;
          }
        }
      }
    }

  }

  /// <summary>
  /// Vote Change
  /// </summary>
  public sealed partial class Votes : pb::IMessage<Votes> {
    private static readonly pb::MessageParser<Votes> _parser = new pb::MessageParser<Votes>(() => new Votes());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Votes> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Votes() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Votes(Votes other) : this() {
      address_ = other.address_;
      oldVotes_ = other.oldVotes_.Clone();
      newVotes_ = other.newVotes_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Votes Clone() {
      return new Votes(this);
    }

    /// <summary>Field number for the "address" field.</summary>
    public const int AddressFieldNumber = 1;
    private pb::ByteString address_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Address {
      get { return address_; }
      set {
        address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "old_votes" field.</summary>
    public const int OldVotesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> _repeated_oldVotes_codec
        = pb::FieldCodec.ForMessage(18, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> oldVotes_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> OldVotes {
      get { return oldVotes_; }
    }

    /// <summary>Field number for the "new_votes" field.</summary>
    public const int NewVotesFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> _repeated_newVotes_codec
        = pb::FieldCodec.ForMessage(26, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> newVotes_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Vote> NewVotes {
      get { return newVotes_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Votes);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Votes other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Address != other.Address) return false;
      if(!oldVotes_.Equals(other.oldVotes_)) return false;
      if(!newVotes_.Equals(other.newVotes_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Address.Length != 0) hash ^= Address.GetHashCode();
      hash ^= oldVotes_.GetHashCode();
      hash ^= newVotes_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Address.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Address);
      }
      oldVotes_.WriteTo(output, _repeated_oldVotes_codec);
      newVotes_.WriteTo(output, _repeated_newVotes_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Address.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
      }
      size += oldVotes_.CalculateSize(_repeated_oldVotes_codec);
      size += newVotes_.CalculateSize(_repeated_newVotes_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Votes other) {
      if (other == null) {
        return;
      }
      if (other.Address.Length != 0) {
        Address = other.Address;
      }
      oldVotes_.Add(other.oldVotes_);
      newVotes_.Add(other.newVotes_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Address = input.ReadBytes();
            break;
          }
          case 18: {
            oldVotes_.AddEntriesFrom(input, _repeated_oldVotes_codec);
            break;
          }
          case 26: {
            newVotes_.AddEntriesFrom(input, _repeated_newVotes_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TXOutput : pb::IMessage<TXOutput> {
    private static readonly pb::MessageParser<TXOutput> _parser = new pb::MessageParser<TXOutput>(() => new TXOutput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TXOutput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXOutput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXOutput(TXOutput other) : this() {
      value_ = other.value_;
      pubKeyHash_ = other.pubKeyHash_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXOutput Clone() {
      return new TXOutput(this);
    }

    /// <summary>Field number for the "value" field.</summary>
    public const int ValueFieldNumber = 1;
    private long value_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Value {
      get { return value_; }
      set {
        value_ = value;
      }
    }

    /// <summary>Field number for the "pubKeyHash" field.</summary>
    public const int PubKeyHashFieldNumber = 2;
    private pb::ByteString pubKeyHash_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PubKeyHash {
      get { return pubKeyHash_; }
      set {
        pubKeyHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TXOutput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TXOutput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Value != other.Value) return false;
      if (PubKeyHash != other.PubKeyHash) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Value != 0L) hash ^= Value.GetHashCode();
      if (PubKeyHash.Length != 0) hash ^= PubKeyHash.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Value != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(Value);
      }
      if (PubKeyHash.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PubKeyHash);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Value != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Value);
      }
      if (PubKeyHash.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubKeyHash);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TXOutput other) {
      if (other == null) {
        return;
      }
      if (other.Value != 0L) {
        Value = other.Value;
      }
      if (other.PubKeyHash.Length != 0) {
        PubKeyHash = other.PubKeyHash;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Value = input.ReadInt64();
            break;
          }
          case 18: {
            PubKeyHash = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class TXInput : pb::IMessage<TXInput> {
    private static readonly pb::MessageParser<TXInput> _parser = new pb::MessageParser<TXInput>(() => new TXInput());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TXInput> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXInput() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXInput(TXInput other) : this() {
      RawData = other.rawData_ != null ? other.RawData.Clone() : null;
      signature_ = other.signature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXInput Clone() {
      return new TXInput(this);
    }

    /// <summary>Field number for the "raw_data" field.</summary>
    public const int RawDataFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Types.raw rawData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Types.raw RawData {
      get { return rawData_; }
      set {
        rawData_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 4;
    private pb::ByteString signature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Signature {
      get { return signature_; }
      set {
        signature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TXInput);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TXInput other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RawData, other.RawData)) return false;
      if (Signature != other.Signature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rawData_ != null) hash ^= RawData.GetHashCode();
      if (Signature.Length != 0) hash ^= Signature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rawData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RawData);
      }
      if (Signature.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Signature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rawData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawData);
      }
      if (Signature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Signature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TXInput other) {
      if (other == null) {
        return;
      }
      if (other.rawData_ != null) {
        if (rawData_ == null) {
          rawData_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Types.raw();
        }
        RawData.MergeFrom(other.RawData);
      }
      if (other.Signature.Length != 0) {
        Signature = other.Signature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rawData_ == null) {
              rawData_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Types.raw();
            }
            input.ReadMessage(rawData_);
            break;
          }
          case 34: {
            Signature = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TXInput message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class raw : pb::IMessage<raw> {
        private static readonly pb::MessageParser<raw> _parser = new pb::MessageParser<raw>(() => new raw());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<raw> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXInput.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw(raw other) : this() {
          txID_ = other.txID_;
          vout_ = other.vout_;
          pubKey_ = other.pubKey_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw Clone() {
          return new raw(this);
        }

        /// <summary>Field number for the "txID" field.</summary>
        public const int TxIDFieldNumber = 1;
        private pb::ByteString txID_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString TxID {
          get { return txID_; }
          set {
            txID_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "vout" field.</summary>
        public const int VoutFieldNumber = 2;
        private long vout_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Vout {
          get { return vout_; }
          set {
            vout_ = value;
          }
        }

        /// <summary>Field number for the "pubKey" field.</summary>
        public const int PubKeyFieldNumber = 3;
        private pb::ByteString pubKey_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString PubKey {
          get { return pubKey_; }
          set {
            pubKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as raw);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(raw other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (TxID != other.TxID) return false;
          if (Vout != other.Vout) return false;
          if (PubKey != other.PubKey) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (TxID.Length != 0) hash ^= TxID.GetHashCode();
          if (Vout != 0L) hash ^= Vout.GetHashCode();
          if (PubKey.Length != 0) hash ^= PubKey.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (TxID.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(TxID);
          }
          if (Vout != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Vout);
          }
          if (PubKey.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(PubKey);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (TxID.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(TxID);
          }
          if (Vout != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Vout);
          }
          if (PubKey.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(PubKey);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(raw other) {
          if (other == null) {
            return;
          }
          if (other.TxID.Length != 0) {
            TxID = other.TxID;
          }
          if (other.Vout != 0L) {
            Vout = other.Vout;
          }
          if (other.PubKey.Length != 0) {
            PubKey = other.PubKey;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                TxID = input.ReadBytes();
                break;
              }
              case 16: {
                Vout = input.ReadInt64();
                break;
              }
              case 26: {
                PubKey = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TXOutputs : pb::IMessage<TXOutputs> {
    private static readonly pb::MessageParser<TXOutputs> _parser = new pb::MessageParser<TXOutputs>(() => new TXOutputs());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TXOutputs> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXOutputs() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXOutputs(TXOutputs other) : this() {
      outputs_ = other.outputs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TXOutputs Clone() {
      return new TXOutputs(this);
    }

    /// <summary>Field number for the "outputs" field.</summary>
    public const int OutputsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutput> _repeated_outputs_codec
        = pb::FieldCodec.ForMessage(10, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutput.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutput> outputs_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutput>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TXOutput> Outputs {
      get { return outputs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TXOutputs);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TXOutputs other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!outputs_.Equals(other.outputs_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= outputs_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      outputs_.WriteTo(output, _repeated_outputs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += outputs_.CalculateSize(_repeated_outputs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TXOutputs other) {
      if (other == null) {
        return;
      }
      outputs_.Add(other.outputs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ResourceReceipt : pb::IMessage<ResourceReceipt> {
    private static readonly pb::MessageParser<ResourceReceipt> _parser = new pb::MessageParser<ResourceReceipt>(() => new ResourceReceipt());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ResourceReceipt> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceReceipt() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceReceipt(ResourceReceipt other) : this() {
      cpuUsage_ = other.cpuUsage_;
      cpuFee_ = other.cpuFee_;
      netUsage_ = other.netUsage_;
      netFee_ = other.netFee_;
      storageDelta_ = other.storageDelta_;
      storageFee_ = other.storageFee_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ResourceReceipt Clone() {
      return new ResourceReceipt(this);
    }

    /// <summary>Field number for the "cpu_usage" field.</summary>
    public const int CpuUsageFieldNumber = 1;
    private long cpuUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpuUsage {
      get { return cpuUsage_; }
      set {
        cpuUsage_ = value;
      }
    }

    /// <summary>Field number for the "cpu_fee" field.</summary>
    public const int CpuFeeFieldNumber = 2;
    private long cpuFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CpuFee {
      get { return cpuFee_; }
      set {
        cpuFee_ = value;
      }
    }

    /// <summary>Field number for the "net_usage" field.</summary>
    public const int NetUsageFieldNumber = 3;
    private long netUsage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetUsage {
      get { return netUsage_; }
      set {
        netUsage_ = value;
      }
    }

    /// <summary>Field number for the "net_fee" field.</summary>
    public const int NetFeeFieldNumber = 4;
    private long netFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long NetFee {
      get { return netFee_; }
      set {
        netFee_ = value;
      }
    }

    /// <summary>Field number for the "storage_delta" field.</summary>
    public const int StorageDeltaFieldNumber = 5;
    private long storageDelta_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageDelta {
      get { return storageDelta_; }
      set {
        storageDelta_ = value;
      }
    }

    /// <summary>Field number for the "storage_fee" field.</summary>
    public const int StorageFeeFieldNumber = 6;
    private long storageFee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long StorageFee {
      get { return storageFee_; }
      set {
        storageFee_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ResourceReceipt);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ResourceReceipt other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CpuUsage != other.CpuUsage) return false;
      if (CpuFee != other.CpuFee) return false;
      if (NetUsage != other.NetUsage) return false;
      if (NetFee != other.NetFee) return false;
      if (StorageDelta != other.StorageDelta) return false;
      if (StorageFee != other.StorageFee) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (CpuUsage != 0L) hash ^= CpuUsage.GetHashCode();
      if (CpuFee != 0L) hash ^= CpuFee.GetHashCode();
      if (NetUsage != 0L) hash ^= NetUsage.GetHashCode();
      if (NetFee != 0L) hash ^= NetFee.GetHashCode();
      if (StorageDelta != 0L) hash ^= StorageDelta.GetHashCode();
      if (StorageFee != 0L) hash ^= StorageFee.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (CpuUsage != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(CpuUsage);
      }
      if (CpuFee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(CpuFee);
      }
      if (NetUsage != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(NetUsage);
      }
      if (NetFee != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(NetFee);
      }
      if (StorageDelta != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(StorageDelta);
      }
      if (StorageFee != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(StorageFee);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (CpuUsage != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpuUsage);
      }
      if (CpuFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CpuFee);
      }
      if (NetUsage != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetUsage);
      }
      if (NetFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(NetFee);
      }
      if (StorageDelta != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StorageDelta);
      }
      if (StorageFee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(StorageFee);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ResourceReceipt other) {
      if (other == null) {
        return;
      }
      if (other.CpuUsage != 0L) {
        CpuUsage = other.CpuUsage;
      }
      if (other.CpuFee != 0L) {
        CpuFee = other.CpuFee;
      }
      if (other.NetUsage != 0L) {
        NetUsage = other.NetUsage;
      }
      if (other.NetFee != 0L) {
        NetFee = other.NetFee;
      }
      if (other.StorageDelta != 0L) {
        StorageDelta = other.StorageDelta;
      }
      if (other.StorageFee != 0L) {
        StorageFee = other.StorageFee;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CpuUsage = input.ReadInt64();
            break;
          }
          case 16: {
            CpuFee = input.ReadInt64();
            break;
          }
          case 24: {
            NetUsage = input.ReadInt64();
            break;
          }
          case 32: {
            NetFee = input.ReadInt64();
            break;
          }
          case 40: {
            StorageDelta = input.ReadInt64();
            break;
          }
          case 48: {
            StorageFee = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ResourceReceipt message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum code {
        [pbr::OriginalName("SUCCESS")] Success = 0,
        [pbr::OriginalName("FAILED")] Failed = 1,
      }

    }
    #endregion

  }

  public sealed partial class Transaction : pb::IMessage<Transaction> {
    private static readonly pb::MessageParser<Transaction> _parser = new pb::MessageParser<Transaction>(() => new Transaction());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transaction> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction(Transaction other) : this() {
      RawData = other.rawData_ != null ? other.RawData.Clone() : null;
      signature_ = other.signature_.Clone();
      ret_ = other.ret_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transaction Clone() {
      return new Transaction(this);
    }

    /// <summary>Field number for the "raw_data" field.</summary>
    public const int RawDataFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.raw rawData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.raw RawData {
      get { return rawData_; }
      set {
        rawData_ = value;
      }
    }

    /// <summary>Field number for the "signature" field.</summary>
    public const int SignatureFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_signature_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> signature_ = new pbc::RepeatedField<pb::ByteString>();
    /// <summary>
    /// only support size = 1,  repeated list here for muti-sig extension
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Signature {
      get { return signature_; }
    }

    /// <summary>Field number for the "ret" field.</summary>
    public const int RetFieldNumber = 5;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result> _repeated_ret_codec
        = pb::FieldCodec.ForMessage(42, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result> ret_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result> Ret {
      get { return ret_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transaction);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transaction other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RawData, other.RawData)) return false;
      if(!signature_.Equals(other.signature_)) return false;
      if(!ret_.Equals(other.ret_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rawData_ != null) hash ^= RawData.GetHashCode();
      hash ^= signature_.GetHashCode();
      hash ^= ret_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rawData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RawData);
      }
      signature_.WriteTo(output, _repeated_signature_codec);
      ret_.WriteTo(output, _repeated_ret_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rawData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawData);
      }
      size += signature_.CalculateSize(_repeated_signature_codec);
      size += ret_.CalculateSize(_repeated_ret_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transaction other) {
      if (other == null) {
        return;
      }
      if (other.rawData_ != null) {
        if (rawData_ == null) {
          rawData_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.raw();
        }
        RawData.MergeFrom(other.RawData);
      }
      signature_.Add(other.signature_);
      ret_.Add(other.ret_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rawData_ == null) {
              rawData_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.raw();
            }
            input.ReadMessage(rawData_);
            break;
          }
          case 18: {
            signature_.AddEntriesFrom(input, _repeated_signature_codec);
            break;
          }
          case 42: {
            ret_.AddEntriesFrom(input, _repeated_ret_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Transaction message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class Contract : pb::IMessage<Contract> {
        private static readonly pb::MessageParser<Contract> _parser = new pb::MessageParser<Contract>(() => new Contract());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Contract> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contract() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contract(Contract other) : this() {
          type_ = other.type_;
          Parameter = other.parameter_ != null ? other.Parameter.Clone() : null;
          provider_ = other.provider_;
          contractName_ = other.contractName_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Contract Clone() {
          return new Contract(this);
        }

        /// <summary>Field number for the "type" field.</summary>
        public const int TypeFieldNumber = 1;
        private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract.Types.ContractType type_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract.Types.ContractType Type {
          get { return type_; }
          set {
            type_ = value;
          }
        }

        /// <summary>Field number for the "parameter" field.</summary>
        public const int ParameterFieldNumber = 2;
        private global::Google.Protobuf.WellKnownTypes.Any parameter_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Google.Protobuf.WellKnownTypes.Any Parameter {
          get { return parameter_; }
          set {
            parameter_ = value;
          }
        }

        /// <summary>Field number for the "provider" field.</summary>
        public const int ProviderFieldNumber = 3;
        private pb::ByteString provider_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Provider {
          get { return provider_; }
          set {
            provider_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ContractName" field.</summary>
        public const int ContractNameFieldNumber = 4;
        private pb::ByteString contractName_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ContractName {
          get { return contractName_; }
          set {
            contractName_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Contract);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Contract other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Type != other.Type) return false;
          if (!object.Equals(Parameter, other.Parameter)) return false;
          if (Provider != other.Provider) return false;
          if (ContractName != other.ContractName) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Type != 0) hash ^= Type.GetHashCode();
          if (parameter_ != null) hash ^= Parameter.GetHashCode();
          if (Provider.Length != 0) hash ^= Provider.GetHashCode();
          if (ContractName.Length != 0) hash ^= ContractName.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Type != 0) {
            output.WriteRawTag(8);
            output.WriteEnum((int) Type);
          }
          if (parameter_ != null) {
            output.WriteRawTag(18);
            output.WriteMessage(Parameter);
          }
          if (Provider.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Provider);
          }
          if (ContractName.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(ContractName);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Type != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
          }
          if (parameter_ != null) {
            size += 1 + pb::CodedOutputStream.ComputeMessageSize(Parameter);
          }
          if (Provider.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Provider);
          }
          if (ContractName.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractName);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Contract other) {
          if (other == null) {
            return;
          }
          if (other.Type != 0) {
            Type = other.Type;
          }
          if (other.parameter_ != null) {
            if (parameter_ == null) {
              parameter_ = new global::Google.Protobuf.WellKnownTypes.Any();
            }
            Parameter.MergeFrom(other.Parameter);
          }
          if (other.Provider.Length != 0) {
            Provider = other.Provider;
          }
          if (other.ContractName.Length != 0) {
            ContractName = other.ContractName;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                type_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract.Types.ContractType) input.ReadEnum();
                break;
              }
              case 18: {
                if (parameter_ == null) {
                  parameter_ = new global::Google.Protobuf.WellKnownTypes.Any();
                }
                input.ReadMessage(parameter_);
                break;
              }
              case 26: {
                Provider = input.ReadBytes();
                break;
              }
              case 34: {
                ContractName = input.ReadBytes();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Contract message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum ContractType {
            [pbr::OriginalName("AccountCreateContract")] AccountCreateContract = 0,
            [pbr::OriginalName("TransferContract")] TransferContract = 1,
            [pbr::OriginalName("TransferAssetContract")] TransferAssetContract = 2,
            [pbr::OriginalName("VoteAssetContract")] VoteAssetContract = 3,
            [pbr::OriginalName("VoteWitnessContract")] VoteWitnessContract = 4,
            [pbr::OriginalName("WitnessCreateContract")] WitnessCreateContract = 5,
            [pbr::OriginalName("AssetIssueContract")] AssetIssueContract = 6,
            [pbr::OriginalName("WitnessUpdateContract")] WitnessUpdateContract = 8,
            [pbr::OriginalName("ParticipateAssetIssueContract")] ParticipateAssetIssueContract = 9,
            [pbr::OriginalName("AccountUpdateContract")] AccountUpdateContract = 10,
            [pbr::OriginalName("FreezeBalanceContract")] FreezeBalanceContract = 11,
            [pbr::OriginalName("UnfreezeBalanceContract")] UnfreezeBalanceContract = 12,
            [pbr::OriginalName("WithdrawBalanceContract")] WithdrawBalanceContract = 13,
            [pbr::OriginalName("UnfreezeAssetContract")] UnfreezeAssetContract = 14,
            [pbr::OriginalName("UpdateAssetContract")] UpdateAssetContract = 15,
            [pbr::OriginalName("ProposalCreateContract")] ProposalCreateContract = 16,
            [pbr::OriginalName("ProposalApproveContract")] ProposalApproveContract = 17,
            [pbr::OriginalName("ProposalDeleteContract")] ProposalDeleteContract = 18,
            [pbr::OriginalName("SetAccountIdContract")] SetAccountIdContract = 19,
            [pbr::OriginalName("CustomContract")] CustomContract = 20,
            [pbr::OriginalName("BuyStorageContract")] BuyStorageContract = 21,
            [pbr::OriginalName("BuyStorageBytesContract")] BuyStorageBytesContract = 22,
            [pbr::OriginalName("SellStorageContract")] SellStorageContract = 23,
            [pbr::OriginalName("CreateSmartContract")] CreateSmartContract = 30,
            [pbr::OriginalName("TriggerSmartContract")] TriggerSmartContract = 31,
            [pbr::OriginalName("GetContract")] GetContract = 32,
            [pbr::OriginalName("UpdateSettingContract")] UpdateSettingContract = 33,
          }

        }
        #endregion

      }

      public sealed partial class Result : pb::IMessage<Result> {
        private static readonly pb::MessageParser<Result> _parser = new pb::MessageParser<Result>(() => new Result());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Result> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Descriptor.NestedTypes[1]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result(Result other) : this() {
          fee_ = other.fee_;
          ret_ = other.ret_;
          withdrawAmount_ = other.withdrawAmount_;
          unfreezeAmount_ = other.unfreezeAmount_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Result Clone() {
          return new Result(this);
        }

        /// <summary>Field number for the "fee" field.</summary>
        public const int FeeFieldNumber = 1;
        private long fee_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Fee {
          get { return fee_; }
          set {
            fee_ = value;
          }
        }

        /// <summary>Field number for the "ret" field.</summary>
        public const int RetFieldNumber = 2;
        private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result.Types.code ret_ = 0;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result.Types.code Ret {
          get { return ret_; }
          set {
            ret_ = value;
          }
        }

        /// <summary>Field number for the "withdraw_amount" field.</summary>
        public const int WithdrawAmountFieldNumber = 15;
        private long withdrawAmount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long WithdrawAmount {
          get { return withdrawAmount_; }
          set {
            withdrawAmount_ = value;
          }
        }

        /// <summary>Field number for the "unfreeze_amount" field.</summary>
        public const int UnfreezeAmountFieldNumber = 16;
        private long unfreezeAmount_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long UnfreezeAmount {
          get { return unfreezeAmount_; }
          set {
            unfreezeAmount_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Result);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Result other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Fee != other.Fee) return false;
          if (Ret != other.Ret) return false;
          if (WithdrawAmount != other.WithdrawAmount) return false;
          if (UnfreezeAmount != other.UnfreezeAmount) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Fee != 0L) hash ^= Fee.GetHashCode();
          if (Ret != 0) hash ^= Ret.GetHashCode();
          if (WithdrawAmount != 0L) hash ^= WithdrawAmount.GetHashCode();
          if (UnfreezeAmount != 0L) hash ^= UnfreezeAmount.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Fee != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Fee);
          }
          if (Ret != 0) {
            output.WriteRawTag(16);
            output.WriteEnum((int) Ret);
          }
          if (WithdrawAmount != 0L) {
            output.WriteRawTag(120);
            output.WriteInt64(WithdrawAmount);
          }
          if (UnfreezeAmount != 0L) {
            output.WriteRawTag(128, 1);
            output.WriteInt64(UnfreezeAmount);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Fee != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fee);
          }
          if (Ret != 0) {
            size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Ret);
          }
          if (WithdrawAmount != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(WithdrawAmount);
          }
          if (UnfreezeAmount != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(UnfreezeAmount);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Result other) {
          if (other == null) {
            return;
          }
          if (other.Fee != 0L) {
            Fee = other.Fee;
          }
          if (other.Ret != 0) {
            Ret = other.Ret;
          }
          if (other.WithdrawAmount != 0L) {
            WithdrawAmount = other.WithdrawAmount;
          }
          if (other.UnfreezeAmount != 0L) {
            UnfreezeAmount = other.UnfreezeAmount;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Fee = input.ReadInt64();
                break;
              }
              case 16: {
                ret_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Result.Types.code) input.ReadEnum();
                break;
              }
              case 120: {
                WithdrawAmount = input.ReadInt64();
                break;
              }
              case 128: {
                UnfreezeAmount = input.ReadInt64();
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the Result message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public enum code {
            [pbr::OriginalName("SUCESS")] Sucess = 0,
            [pbr::OriginalName("FAILED")] Failed = 1,
          }

        }
        #endregion

      }

      public sealed partial class raw : pb::IMessage<raw> {
        private static readonly pb::MessageParser<raw> _parser = new pb::MessageParser<raw>(() => new raw());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<raw> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Descriptor.NestedTypes[2]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw(raw other) : this() {
          refBlockBytes_ = other.refBlockBytes_;
          refBlockNum_ = other.refBlockNum_;
          refBlockHash_ = other.refBlockHash_;
          expiration_ = other.expiration_;
          auths_ = other.auths_.Clone();
          data_ = other.data_;
          contract_ = other.contract_.Clone();
          scripts_ = other.scripts_;
          timestamp_ = other.timestamp_;
          feeLimit_ = other.feeLimit_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw Clone() {
          return new raw(this);
        }

        /// <summary>Field number for the "ref_block_bytes" field.</summary>
        public const int RefBlockBytesFieldNumber = 1;
        private pb::ByteString refBlockBytes_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString RefBlockBytes {
          get { return refBlockBytes_; }
          set {
            refBlockBytes_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "ref_block_num" field.</summary>
        public const int RefBlockNumFieldNumber = 3;
        private long refBlockNum_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long RefBlockNum {
          get { return refBlockNum_; }
          set {
            refBlockNum_ = value;
          }
        }

        /// <summary>Field number for the "ref_block_hash" field.</summary>
        public const int RefBlockHashFieldNumber = 4;
        private pb::ByteString refBlockHash_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString RefBlockHash {
          get { return refBlockHash_; }
          set {
            refBlockHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "expiration" field.</summary>
        public const int ExpirationFieldNumber = 8;
        private long expiration_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Expiration {
          get { return expiration_; }
          set {
            expiration_ = value;
          }
        }

        /// <summary>Field number for the "auths" field.</summary>
        public const int AuthsFieldNumber = 9;
        private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.authority> _repeated_auths_codec
            = pb::FieldCodec.ForMessage(74, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.authority.Parser);
        private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.authority> auths_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.authority>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.authority> Auths {
          get { return auths_; }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 10;
        private pb::ByteString data_ = pb::ByteString.Empty;
        /// <summary>
        /// data not used
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "contract" field.</summary>
        public const int ContractFieldNumber = 11;
        private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract> _repeated_contract_codec
            = pb::FieldCodec.ForMessage(90, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract.Parser);
        private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract> contract_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract>();
        /// <summary>
        ///only support size = 1,  repeated list here for extension
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Types.Contract> Contract {
          get { return contract_; }
        }

        /// <summary>Field number for the "scripts" field.</summary>
        public const int ScriptsFieldNumber = 12;
        private pb::ByteString scripts_ = pb::ByteString.Empty;
        /// <summary>
        /// scripts not used
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Scripts {
          get { return scripts_; }
          set {
            scripts_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 14;
        private long timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "fee_limit" field.</summary>
        public const int FeeLimitFieldNumber = 18;
        private long feeLimit_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long FeeLimit {
          get { return feeLimit_; }
          set {
            feeLimit_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as raw);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(raw other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (RefBlockBytes != other.RefBlockBytes) return false;
          if (RefBlockNum != other.RefBlockNum) return false;
          if (RefBlockHash != other.RefBlockHash) return false;
          if (Expiration != other.Expiration) return false;
          if(!auths_.Equals(other.auths_)) return false;
          if (Data != other.Data) return false;
          if(!contract_.Equals(other.contract_)) return false;
          if (Scripts != other.Scripts) return false;
          if (Timestamp != other.Timestamp) return false;
          if (FeeLimit != other.FeeLimit) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (RefBlockBytes.Length != 0) hash ^= RefBlockBytes.GetHashCode();
          if (RefBlockNum != 0L) hash ^= RefBlockNum.GetHashCode();
          if (RefBlockHash.Length != 0) hash ^= RefBlockHash.GetHashCode();
          if (Expiration != 0L) hash ^= Expiration.GetHashCode();
          hash ^= auths_.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          hash ^= contract_.GetHashCode();
          if (Scripts.Length != 0) hash ^= Scripts.GetHashCode();
          if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
          if (FeeLimit != 0L) hash ^= FeeLimit.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (RefBlockBytes.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(RefBlockBytes);
          }
          if (RefBlockNum != 0L) {
            output.WriteRawTag(24);
            output.WriteInt64(RefBlockNum);
          }
          if (RefBlockHash.Length != 0) {
            output.WriteRawTag(34);
            output.WriteBytes(RefBlockHash);
          }
          if (Expiration != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(Expiration);
          }
          auths_.WriteTo(output, _repeated_auths_codec);
          if (Data.Length != 0) {
            output.WriteRawTag(82);
            output.WriteBytes(Data);
          }
          contract_.WriteTo(output, _repeated_contract_codec);
          if (Scripts.Length != 0) {
            output.WriteRawTag(98);
            output.WriteBytes(Scripts);
          }
          if (Timestamp != 0L) {
            output.WriteRawTag(112);
            output.WriteInt64(Timestamp);
          }
          if (FeeLimit != 0L) {
            output.WriteRawTag(144, 1);
            output.WriteInt64(FeeLimit);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (RefBlockBytes.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(RefBlockBytes);
          }
          if (RefBlockNum != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(RefBlockNum);
          }
          if (RefBlockHash.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(RefBlockHash);
          }
          if (Expiration != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Expiration);
          }
          size += auths_.CalculateSize(_repeated_auths_codec);
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          size += contract_.CalculateSize(_repeated_contract_codec);
          if (Scripts.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Scripts);
          }
          if (Timestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
          }
          if (FeeLimit != 0L) {
            size += 2 + pb::CodedOutputStream.ComputeInt64Size(FeeLimit);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(raw other) {
          if (other == null) {
            return;
          }
          if (other.RefBlockBytes.Length != 0) {
            RefBlockBytes = other.RefBlockBytes;
          }
          if (other.RefBlockNum != 0L) {
            RefBlockNum = other.RefBlockNum;
          }
          if (other.RefBlockHash.Length != 0) {
            RefBlockHash = other.RefBlockHash;
          }
          if (other.Expiration != 0L) {
            Expiration = other.Expiration;
          }
          auths_.Add(other.auths_);
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          contract_.Add(other.contract_);
          if (other.Scripts.Length != 0) {
            Scripts = other.Scripts;
          }
          if (other.Timestamp != 0L) {
            Timestamp = other.Timestamp;
          }
          if (other.FeeLimit != 0L) {
            FeeLimit = other.FeeLimit;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                RefBlockBytes = input.ReadBytes();
                break;
              }
              case 24: {
                RefBlockNum = input.ReadInt64();
                break;
              }
              case 34: {
                RefBlockHash = input.ReadBytes();
                break;
              }
              case 64: {
                Expiration = input.ReadInt64();
                break;
              }
              case 74: {
                auths_.AddEntriesFrom(input, _repeated_auths_codec);
                break;
              }
              case 82: {
                Data = input.ReadBytes();
                break;
              }
              case 90: {
                contract_.AddEntriesFrom(input, _repeated_contract_codec);
                break;
              }
              case 98: {
                Scripts = input.ReadBytes();
                break;
              }
              case 112: {
                Timestamp = input.ReadInt64();
                break;
              }
              case 144: {
                FeeLimit = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class TransactionInfo : pb::IMessage<TransactionInfo> {
    private static readonly pb::MessageParser<TransactionInfo> _parser = new pb::MessageParser<TransactionInfo>(() => new TransactionInfo());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionInfo> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInfo() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInfo(TransactionInfo other) : this() {
      id_ = other.id_;
      fee_ = other.fee_;
      blockNumber_ = other.blockNumber_;
      blockTimeStamp_ = other.blockTimeStamp_;
      contractResult_ = other.contractResult_.Clone();
      contractAddress_ = other.contractAddress_;
      Receipt = other.receipt_ != null ? other.Receipt.Clone() : null;
      log_ = other.log_.Clone();
      result_ = other.result_;
      resMessage_ = other.resMessage_;
      withdrawAmount_ = other.withdrawAmount_;
      unfreezeAmount_ = other.unfreezeAmount_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionInfo Clone() {
      return new TransactionInfo(this);
    }

    /// <summary>Field number for the "id" field.</summary>
    public const int IdFieldNumber = 1;
    private pb::ByteString id_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Id {
      get { return id_; }
      set {
        id_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "fee" field.</summary>
    public const int FeeFieldNumber = 2;
    private long fee_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Fee {
      get { return fee_; }
      set {
        fee_ = value;
      }
    }

    /// <summary>Field number for the "blockNumber" field.</summary>
    public const int BlockNumberFieldNumber = 3;
    private long blockNumber_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockNumber {
      get { return blockNumber_; }
      set {
        blockNumber_ = value;
      }
    }

    /// <summary>Field number for the "blockTimeStamp" field.</summary>
    public const int BlockTimeStampFieldNumber = 4;
    private long blockTimeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long BlockTimeStamp {
      get { return blockTimeStamp_; }
      set {
        blockTimeStamp_ = value;
      }
    }

    /// <summary>Field number for the "contractResult" field.</summary>
    public const int ContractResultFieldNumber = 5;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_contractResult_codec
        = pb::FieldCodec.ForBytes(42);
    private readonly pbc::RepeatedField<pb::ByteString> contractResult_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> ContractResult {
      get { return contractResult_; }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 6;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "receipt" field.</summary>
    public const int ReceiptFieldNumber = 7;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ResourceReceipt receipt_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ResourceReceipt Receipt {
      get { return receipt_; }
      set {
        receipt_ = value;
      }
    }

    /// <summary>Field number for the "log" field.</summary>
    public const int LogFieldNumber = 8;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.Log> _repeated_log_codec
        = pb::FieldCodec.ForMessage(66, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.Log.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.Log> log_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.Log>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.Log> Log {
      get { return log_; }
    }

    /// <summary>Field number for the "result" field.</summary>
    public const int ResultFieldNumber = 9;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.code result_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.code Result {
      get { return result_; }
      set {
        result_ = value;
      }
    }

    /// <summary>Field number for the "resMessage" field.</summary>
    public const int ResMessageFieldNumber = 10;
    private pb::ByteString resMessage_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ResMessage {
      get { return resMessage_; }
      set {
        resMessage_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "withdraw_amount" field.</summary>
    public const int WithdrawAmountFieldNumber = 15;
    private long withdrawAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long WithdrawAmount {
      get { return withdrawAmount_; }
      set {
        withdrawAmount_ = value;
      }
    }

    /// <summary>Field number for the "unfreeze_amount" field.</summary>
    public const int UnfreezeAmountFieldNumber = 16;
    private long unfreezeAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long UnfreezeAmount {
      get { return unfreezeAmount_; }
      set {
        unfreezeAmount_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionInfo);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionInfo other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Fee != other.Fee) return false;
      if (BlockNumber != other.BlockNumber) return false;
      if (BlockTimeStamp != other.BlockTimeStamp) return false;
      if(!contractResult_.Equals(other.contractResult_)) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (!object.Equals(Receipt, other.Receipt)) return false;
      if(!log_.Equals(other.log_)) return false;
      if (Result != other.Result) return false;
      if (ResMessage != other.ResMessage) return false;
      if (WithdrawAmount != other.WithdrawAmount) return false;
      if (UnfreezeAmount != other.UnfreezeAmount) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Id.Length != 0) hash ^= Id.GetHashCode();
      if (Fee != 0L) hash ^= Fee.GetHashCode();
      if (BlockNumber != 0L) hash ^= BlockNumber.GetHashCode();
      if (BlockTimeStamp != 0L) hash ^= BlockTimeStamp.GetHashCode();
      hash ^= contractResult_.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (receipt_ != null) hash ^= Receipt.GetHashCode();
      hash ^= log_.GetHashCode();
      if (Result != 0) hash ^= Result.GetHashCode();
      if (ResMessage.Length != 0) hash ^= ResMessage.GetHashCode();
      if (WithdrawAmount != 0L) hash ^= WithdrawAmount.GetHashCode();
      if (UnfreezeAmount != 0L) hash ^= UnfreezeAmount.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Id.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(Id);
      }
      if (Fee != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(Fee);
      }
      if (BlockNumber != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(BlockNumber);
      }
      if (BlockTimeStamp != 0L) {
        output.WriteRawTag(32);
        output.WriteInt64(BlockTimeStamp);
      }
      contractResult_.WriteTo(output, _repeated_contractResult_codec);
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(50);
        output.WriteBytes(ContractAddress);
      }
      if (receipt_ != null) {
        output.WriteRawTag(58);
        output.WriteMessage(Receipt);
      }
      log_.WriteTo(output, _repeated_log_codec);
      if (Result != 0) {
        output.WriteRawTag(72);
        output.WriteEnum((int) Result);
      }
      if (ResMessage.Length != 0) {
        output.WriteRawTag(82);
        output.WriteBytes(ResMessage);
      }
      if (WithdrawAmount != 0L) {
        output.WriteRawTag(120);
        output.WriteInt64(WithdrawAmount);
      }
      if (UnfreezeAmount != 0L) {
        output.WriteRawTag(128, 1);
        output.WriteInt64(UnfreezeAmount);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Id.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Id);
      }
      if (Fee != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Fee);
      }
      if (BlockNumber != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockNumber);
      }
      if (BlockTimeStamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(BlockTimeStamp);
      }
      size += contractResult_.CalculateSize(_repeated_contractResult_codec);
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (receipt_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Receipt);
      }
      size += log_.CalculateSize(_repeated_log_codec);
      if (Result != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Result);
      }
      if (ResMessage.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ResMessage);
      }
      if (WithdrawAmount != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(WithdrawAmount);
      }
      if (UnfreezeAmount != 0L) {
        size += 2 + pb::CodedOutputStream.ComputeInt64Size(UnfreezeAmount);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionInfo other) {
      if (other == null) {
        return;
      }
      if (other.Id.Length != 0) {
        Id = other.Id;
      }
      if (other.Fee != 0L) {
        Fee = other.Fee;
      }
      if (other.BlockNumber != 0L) {
        BlockNumber = other.BlockNumber;
      }
      if (other.BlockTimeStamp != 0L) {
        BlockTimeStamp = other.BlockTimeStamp;
      }
      contractResult_.Add(other.contractResult_);
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.receipt_ != null) {
        if (receipt_ == null) {
          receipt_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ResourceReceipt();
        }
        Receipt.MergeFrom(other.Receipt);
      }
      log_.Add(other.log_);
      if (other.Result != 0) {
        Result = other.Result;
      }
      if (other.ResMessage.Length != 0) {
        ResMessage = other.ResMessage;
      }
      if (other.WithdrawAmount != 0L) {
        WithdrawAmount = other.WithdrawAmount;
      }
      if (other.UnfreezeAmount != 0L) {
        UnfreezeAmount = other.UnfreezeAmount;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Id = input.ReadBytes();
            break;
          }
          case 16: {
            Fee = input.ReadInt64();
            break;
          }
          case 24: {
            BlockNumber = input.ReadInt64();
            break;
          }
          case 32: {
            BlockTimeStamp = input.ReadInt64();
            break;
          }
          case 42: {
            contractResult_.AddEntriesFrom(input, _repeated_contractResult_codec);
            break;
          }
          case 50: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 58: {
            if (receipt_ == null) {
              receipt_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ResourceReceipt();
            }
            input.ReadMessage(receipt_);
            break;
          }
          case 66: {
            log_.AddEntriesFrom(input, _repeated_log_codec);
            break;
          }
          case 72: {
            result_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Types.code) input.ReadEnum();
            break;
          }
          case 82: {
            ResMessage = input.ReadBytes();
            break;
          }
          case 120: {
            WithdrawAmount = input.ReadInt64();
            break;
          }
          case 128: {
            UnfreezeAmount = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the TransactionInfo message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum code {
        [pbr::OriginalName("SUCESS")] Sucess = 0,
        [pbr::OriginalName("FAILED")] Failed = 1,
      }

      public sealed partial class Log : pb::IMessage<Log> {
        private static readonly pb::MessageParser<Log> _parser = new pb::MessageParser<Log>(() => new Log());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<Log> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TransactionInfo.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Log() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Log(Log other) : this() {
          address_ = other.address_;
          topics_ = other.topics_.Clone();
          data_ = other.data_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public Log Clone() {
          return new Log(this);
        }

        /// <summary>Field number for the "address" field.</summary>
        public const int AddressFieldNumber = 1;
        private pb::ByteString address_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Address {
          get { return address_; }
          set {
            address_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "topics" field.</summary>
        public const int TopicsFieldNumber = 2;
        private static readonly pb::FieldCodec<pb::ByteString> _repeated_topics_codec
            = pb::FieldCodec.ForBytes(18);
        private readonly pbc::RepeatedField<pb::ByteString> topics_ = new pbc::RepeatedField<pb::ByteString>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<pb::ByteString> Topics {
          get { return topics_; }
        }

        /// <summary>Field number for the "data" field.</summary>
        public const int DataFieldNumber = 3;
        private pb::ByteString data_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Data {
          get { return data_; }
          set {
            data_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as Log);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(Log other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Address != other.Address) return false;
          if(!topics_.Equals(other.topics_)) return false;
          if (Data != other.Data) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Address.Length != 0) hash ^= Address.GetHashCode();
          hash ^= topics_.GetHashCode();
          if (Data.Length != 0) hash ^= Data.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Address.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Address);
          }
          topics_.WriteTo(output, _repeated_topics_codec);
          if (Data.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(Data);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Address.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Address);
          }
          size += topics_.CalculateSize(_repeated_topics_codec);
          if (Data.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Data);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(Log other) {
          if (other == null) {
            return;
          }
          if (other.Address.Length != 0) {
            Address = other.Address;
          }
          topics_.Add(other.topics_);
          if (other.Data.Length != 0) {
            Data = other.Data;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Address = input.ReadBytes();
                break;
              }
              case 18: {
                topics_.AddEntriesFrom(input, _repeated_topics_codec);
                break;
              }
              case 26: {
                Data = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Transactions : pb::IMessage<Transactions> {
    private static readonly pb::MessageParser<Transactions> _parser = new pb::MessageParser<Transactions>(() => new Transactions());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Transactions> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transactions() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transactions(Transactions other) : this() {
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Transactions Clone() {
      return new Transactions(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int Transactions_FieldNumber = 1;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> transactions_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> Transactions_ {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Transactions);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Transactions other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Transactions other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class TransactionSign : pb::IMessage<TransactionSign> {
    private static readonly pb::MessageParser<TransactionSign> _parser = new pb::MessageParser<TransactionSign>(() => new TransactionSign());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<TransactionSign> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSign() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSign(TransactionSign other) : this() {
      Transaction = other.transaction_ != null ? other.Transaction.Clone() : null;
      privateKey_ = other.privateKey_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public TransactionSign Clone() {
      return new TransactionSign(this);
    }

    /// <summary>Field number for the "transaction" field.</summary>
    public const int TransactionFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction transaction_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction Transaction {
      get { return transaction_; }
      set {
        transaction_ = value;
      }
    }

    /// <summary>Field number for the "privateKey" field.</summary>
    public const int PrivateKeyFieldNumber = 2;
    private pb::ByteString privateKey_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString PrivateKey {
      get { return privateKey_; }
      set {
        privateKey_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as TransactionSign);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(TransactionSign other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Transaction, other.Transaction)) return false;
      if (PrivateKey != other.PrivateKey) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (transaction_ != null) hash ^= Transaction.GetHashCode();
      if (PrivateKey.Length != 0) hash ^= PrivateKey.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (transaction_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Transaction);
      }
      if (PrivateKey.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(PrivateKey);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (transaction_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Transaction);
      }
      if (PrivateKey.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(PrivateKey);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(TransactionSign other) {
      if (other == null) {
        return;
      }
      if (other.transaction_ != null) {
        if (transaction_ == null) {
          transaction_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction();
        }
        Transaction.MergeFrom(other.Transaction);
      }
      if (other.PrivateKey.Length != 0) {
        PrivateKey = other.PrivateKey;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (transaction_ == null) {
              transaction_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction();
            }
            input.ReadMessage(transaction_);
            break;
          }
          case 18: {
            PrivateKey = input.ReadBytes();
            break;
          }
        }
      }
    }

  }

  public sealed partial class BlockHeader : pb::IMessage<BlockHeader> {
    private static readonly pb::MessageParser<BlockHeader> _parser = new pb::MessageParser<BlockHeader>(() => new BlockHeader());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockHeader> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader(BlockHeader other) : this() {
      RawData = other.rawData_ != null ? other.RawData.Clone() : null;
      witnessSignature_ = other.witnessSignature_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockHeader Clone() {
      return new BlockHeader(this);
    }

    /// <summary>Field number for the "raw_data" field.</summary>
    public const int RawDataFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Types.raw rawData_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Types.raw RawData {
      get { return rawData_; }
      set {
        rawData_ = value;
      }
    }

    /// <summary>Field number for the "witness_signature" field.</summary>
    public const int WitnessSignatureFieldNumber = 2;
    private pb::ByteString witnessSignature_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString WitnessSignature {
      get { return witnessSignature_; }
      set {
        witnessSignature_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockHeader);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockHeader other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(RawData, other.RawData)) return false;
      if (WitnessSignature != other.WitnessSignature) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (rawData_ != null) hash ^= RawData.GetHashCode();
      if (WitnessSignature.Length != 0) hash ^= WitnessSignature.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (rawData_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(RawData);
      }
      if (WitnessSignature.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(WitnessSignature);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (rawData_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(RawData);
      }
      if (WitnessSignature.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(WitnessSignature);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockHeader other) {
      if (other == null) {
        return;
      }
      if (other.rawData_ != null) {
        if (rawData_ == null) {
          rawData_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Types.raw();
        }
        RawData.MergeFrom(other.RawData);
      }
      if (other.WitnessSignature.Length != 0) {
        WitnessSignature = other.WitnessSignature;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (rawData_ == null) {
              rawData_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Types.raw();
            }
            input.ReadMessage(rawData_);
            break;
          }
          case 18: {
            WitnessSignature = input.ReadBytes();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BlockHeader message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class raw : pb::IMessage<raw> {
        private static readonly pb::MessageParser<raw> _parser = new pb::MessageParser<raw>(() => new raw());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<raw> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw(raw other) : this() {
          timestamp_ = other.timestamp_;
          txTrieRoot_ = other.txTrieRoot_;
          parentHash_ = other.parentHash_;
          number_ = other.number_;
          witnessId_ = other.witnessId_;
          witnessAddress_ = other.witnessAddress_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public raw Clone() {
          return new raw(this);
        }

        /// <summary>Field number for the "timestamp" field.</summary>
        public const int TimestampFieldNumber = 1;
        private long timestamp_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Timestamp {
          get { return timestamp_; }
          set {
            timestamp_ = value;
          }
        }

        /// <summary>Field number for the "txTrieRoot" field.</summary>
        public const int TxTrieRootFieldNumber = 2;
        private pb::ByteString txTrieRoot_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString TxTrieRoot {
          get { return txTrieRoot_; }
          set {
            txTrieRoot_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "parentHash" field.</summary>
        public const int ParentHashFieldNumber = 3;
        private pb::ByteString parentHash_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString ParentHash {
          get { return parentHash_; }
          set {
            parentHash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 7;
        private long number_;
        /// <summary>
        ///bytes nonce = 5;
        ///bytes difficulty = 6;
        /// </summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Number {
          get { return number_; }
          set {
            number_ = value;
          }
        }

        /// <summary>Field number for the "witness_id" field.</summary>
        public const int WitnessIdFieldNumber = 8;
        private long witnessId_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long WitnessId {
          get { return witnessId_; }
          set {
            witnessId_ = value;
          }
        }

        /// <summary>Field number for the "witness_address" field.</summary>
        public const int WitnessAddressFieldNumber = 9;
        private pb::ByteString witnessAddress_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString WitnessAddress {
          get { return witnessAddress_; }
          set {
            witnessAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as raw);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(raw other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Timestamp != other.Timestamp) return false;
          if (TxTrieRoot != other.TxTrieRoot) return false;
          if (ParentHash != other.ParentHash) return false;
          if (Number != other.Number) return false;
          if (WitnessId != other.WitnessId) return false;
          if (WitnessAddress != other.WitnessAddress) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
          if (TxTrieRoot.Length != 0) hash ^= TxTrieRoot.GetHashCode();
          if (ParentHash.Length != 0) hash ^= ParentHash.GetHashCode();
          if (Number != 0L) hash ^= Number.GetHashCode();
          if (WitnessId != 0L) hash ^= WitnessId.GetHashCode();
          if (WitnessAddress.Length != 0) hash ^= WitnessAddress.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Timestamp != 0L) {
            output.WriteRawTag(8);
            output.WriteInt64(Timestamp);
          }
          if (TxTrieRoot.Length != 0) {
            output.WriteRawTag(18);
            output.WriteBytes(TxTrieRoot);
          }
          if (ParentHash.Length != 0) {
            output.WriteRawTag(26);
            output.WriteBytes(ParentHash);
          }
          if (Number != 0L) {
            output.WriteRawTag(56);
            output.WriteInt64(Number);
          }
          if (WitnessId != 0L) {
            output.WriteRawTag(64);
            output.WriteInt64(WitnessId);
          }
          if (WitnessAddress.Length != 0) {
            output.WriteRawTag(74);
            output.WriteBytes(WitnessAddress);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Timestamp != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
          }
          if (TxTrieRoot.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(TxTrieRoot);
          }
          if (ParentHash.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(ParentHash);
          }
          if (Number != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Number);
          }
          if (WitnessId != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(WitnessId);
          }
          if (WitnessAddress.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(WitnessAddress);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(raw other) {
          if (other == null) {
            return;
          }
          if (other.Timestamp != 0L) {
            Timestamp = other.Timestamp;
          }
          if (other.TxTrieRoot.Length != 0) {
            TxTrieRoot = other.TxTrieRoot;
          }
          if (other.ParentHash.Length != 0) {
            ParentHash = other.ParentHash;
          }
          if (other.Number != 0L) {
            Number = other.Number;
          }
          if (other.WitnessId != 0L) {
            WitnessId = other.WitnessId;
          }
          if (other.WitnessAddress.Length != 0) {
            WitnessAddress = other.WitnessAddress;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 8: {
                Timestamp = input.ReadInt64();
                break;
              }
              case 18: {
                TxTrieRoot = input.ReadBytes();
                break;
              }
              case 26: {
                ParentHash = input.ReadBytes();
                break;
              }
              case 56: {
                Number = input.ReadInt64();
                break;
              }
              case 64: {
                WitnessId = input.ReadInt64();
                break;
              }
              case 74: {
                WitnessAddress = input.ReadBytes();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// block
  /// </summary>
  public sealed partial class Block : pb::IMessage<Block> {
    private static readonly pb::MessageParser<Block> _parser = new pb::MessageParser<Block>(() => new Block());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Block> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block(Block other) : this() {
      transactions_ = other.transactions_.Clone();
      BlockHeader = other.blockHeader_ != null ? other.BlockHeader.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Block Clone() {
      return new Block(this);
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(10, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> transactions_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> Transactions {
      get { return transactions_; }
    }

    /// <summary>Field number for the "block_header" field.</summary>
    public const int BlockHeaderFieldNumber = 2;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader blockHeader_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader BlockHeader {
      get { return blockHeader_; }
      set {
        blockHeader_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Block);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Block other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!transactions_.Equals(other.transactions_)) return false;
      if (!object.Equals(BlockHeader, other.BlockHeader)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= transactions_.GetHashCode();
      if (blockHeader_ != null) hash ^= BlockHeader.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (blockHeader_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(BlockHeader);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (blockHeader_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(BlockHeader);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Block other) {
      if (other == null) {
        return;
      }
      transactions_.Add(other.transactions_);
      if (other.blockHeader_ != null) {
        if (blockHeader_ == null) {
          blockHeader_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader();
        }
        BlockHeader.MergeFrom(other.BlockHeader);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
          case 18: {
            if (blockHeader_ == null) {
              blockHeader_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader();
            }
            input.ReadMessage(blockHeader_);
            break;
          }
        }
      }
    }

  }

  public sealed partial class ChainInventory : pb::IMessage<ChainInventory> {
    private static readonly pb::MessageParser<ChainInventory> _parser = new pb::MessageParser<ChainInventory>(() => new ChainInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<ChainInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainInventory(ChainInventory other) : this() {
      ids_ = other.ids_.Clone();
      remainNum_ = other.remainNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public ChainInventory Clone() {
      return new ChainInventory(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Types.BlockId> _repeated_ids_codec
        = pb::FieldCodec.ForMessage(10, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Types.BlockId.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Types.BlockId> ids_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Types.BlockId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Types.BlockId> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "remain_num" field.</summary>
    public const int RemainNumFieldNumber = 2;
    private long remainNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long RemainNum {
      get { return remainNum_; }
      set {
        remainNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as ChainInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(ChainInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if (RemainNum != other.RemainNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (RemainNum != 0L) hash ^= RemainNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (RemainNum != 0L) {
        output.WriteRawTag(16);
        output.WriteInt64(RemainNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (RemainNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(RemainNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(ChainInventory other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      if (other.RemainNum != 0L) {
        RemainNum = other.RemainNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 16: {
            RemainNum = input.ReadInt64();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the ChainInventory message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class BlockId : pb::IMessage<BlockId> {
        private static readonly pb::MessageParser<BlockId> _parser = new pb::MessageParser<BlockId>(() => new BlockId());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BlockId> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ChainInventory.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId(BlockId other) : this() {
          hash_ = other.hash_;
          number_ = other.number_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId Clone() {
          return new BlockId(this);
        }

        /// <summary>Field number for the "hash" field.</summary>
        public const int HashFieldNumber = 1;
        private pb::ByteString hash_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Hash {
          get { return hash_; }
          set {
            hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 2;
        private long number_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Number {
          get { return number_; }
          set {
            number_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BlockId);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BlockId other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Hash != other.Hash) return false;
          if (Number != other.Number) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Hash.Length != 0) hash ^= Hash.GetHashCode();
          if (Number != 0L) hash ^= Number.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Hash.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Hash);
          }
          if (Number != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Number);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Hash.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
          }
          if (Number != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Number);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BlockId other) {
          if (other == null) {
            return;
          }
          if (other.Hash.Length != 0) {
            Hash = other.Hash;
          }
          if (other.Number != 0L) {
            Number = other.Number;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Hash = input.ReadBytes();
                break;
              }
              case 16: {
                Number = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  /// <summary>
  /// Inventory
  /// </summary>
  public sealed partial class BlockInventory : pb::IMessage<BlockInventory> {
    private static readonly pb::MessageParser<BlockInventory> _parser = new pb::MessageParser<BlockInventory>(() => new BlockInventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<BlockInventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockInventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockInventory(BlockInventory other) : this() {
      ids_ = other.ids_.Clone();
      type_ = other.type_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public BlockInventory Clone() {
      return new BlockInventory(this);
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 1;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.BlockId> _repeated_ids_codec
        = pb::FieldCodec.ForMessage(10, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.BlockId.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.BlockId> ids_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.BlockId>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.BlockId> Ids {
      get { return ids_; }
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 2;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.Type type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.Type Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as BlockInventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(BlockInventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!ids_.Equals(other.ids_)) return false;
      if (Type != other.Type) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ids_.GetHashCode();
      if (Type != 0) hash ^= Type.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      ids_.WriteTo(output, _repeated_ids_codec);
      if (Type != 0) {
        output.WriteRawTag(16);
        output.WriteEnum((int) Type);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(BlockInventory other) {
      if (other == null) {
        return;
      }
      ids_.Add(other.ids_);
      if (other.Type != 0) {
        Type = other.Type;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
          case 16: {
            type_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Types.Type) input.ReadEnum();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the BlockInventory message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum Type {
        [pbr::OriginalName("SYNC")] Sync = 0,
        [pbr::OriginalName("ADVTISE")] Advtise = 1,
        [pbr::OriginalName("FETCH")] Fetch = 2,
      }

      public sealed partial class BlockId : pb::IMessage<BlockId> {
        private static readonly pb::MessageParser<BlockId> _parser = new pb::MessageParser<BlockId>(() => new BlockId());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BlockId> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockInventory.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId(BlockId other) : this() {
          hash_ = other.hash_;
          number_ = other.number_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId Clone() {
          return new BlockId(this);
        }

        /// <summary>Field number for the "hash" field.</summary>
        public const int HashFieldNumber = 1;
        private pb::ByteString hash_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Hash {
          get { return hash_; }
          set {
            hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 2;
        private long number_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Number {
          get { return number_; }
          set {
            number_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BlockId);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BlockId other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Hash != other.Hash) return false;
          if (Number != other.Number) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Hash.Length != 0) hash ^= Hash.GetHashCode();
          if (Number != 0L) hash ^= Number.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Hash.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Hash);
          }
          if (Number != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Number);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Hash.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
          }
          if (Number != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Number);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BlockId other) {
          if (other == null) {
            return;
          }
          if (other.Hash.Length != 0) {
            Hash = other.Hash;
          }
          if (other.Number != 0L) {
            Number = other.Number;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Hash = input.ReadBytes();
                break;
              }
              case 16: {
                Number = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class Inventory : pb::IMessage<Inventory> {
    private static readonly pb::MessageParser<Inventory> _parser = new pb::MessageParser<Inventory>(() => new Inventory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Inventory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inventory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inventory(Inventory other) : this() {
      type_ = other.type_;
      ids_ = other.ids_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Inventory Clone() {
      return new Inventory(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Inventory.Types.InventoryType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Inventory.Types.InventoryType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "ids" field.</summary>
    public const int IdsFieldNumber = 2;
    private static readonly pb::FieldCodec<pb::ByteString> _repeated_ids_codec
        = pb::FieldCodec.ForBytes(18);
    private readonly pbc::RepeatedField<pb::ByteString> ids_ = new pbc::RepeatedField<pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<pb::ByteString> Ids {
      get { return ids_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Inventory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Inventory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!ids_.Equals(other.ids_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= ids_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      ids_.WriteTo(output, _repeated_ids_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += ids_.CalculateSize(_repeated_ids_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Inventory other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      ids_.Add(other.ids_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Inventory.Types.InventoryType) input.ReadEnum();
            break;
          }
          case 18: {
            ids_.AddEntriesFrom(input, _repeated_ids_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Inventory message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum InventoryType {
        [pbr::OriginalName("TRX")] Trx = 0,
        [pbr::OriginalName("BLOCK")] Block = 1,
      }

    }
    #endregion

  }

  public sealed partial class Items : pb::IMessage<Items> {
    private static readonly pb::MessageParser<Items> _parser = new pb::MessageParser<Items>(() => new Items());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<Items> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items(Items other) : this() {
      type_ = other.type_;
      blocks_ = other.blocks_.Clone();
      blockHeaders_ = other.blockHeaders_.Clone();
      transactions_ = other.transactions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public Items Clone() {
      return new Items(this);
    }

    /// <summary>Field number for the "type" field.</summary>
    public const int TypeFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Items.Types.ItemType type_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Items.Types.ItemType Type {
      get { return type_; }
      set {
        type_ = value;
      }
    }

    /// <summary>Field number for the "blocks" field.</summary>
    public const int BlocksFieldNumber = 2;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Block> _repeated_blocks_codec
        = pb::FieldCodec.ForMessage(18, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Block.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Block> blocks_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Block>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Block> Blocks {
      get { return blocks_; }
    }

    /// <summary>Field number for the "block_headers" field.</summary>
    public const int BlockHeadersFieldNumber = 3;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader> _repeated_blockHeaders_codec
        = pb::FieldCodec.ForMessage(26, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader> blockHeaders_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.BlockHeader> BlockHeaders {
      get { return blockHeaders_; }
    }

    /// <summary>Field number for the "transactions" field.</summary>
    public const int TransactionsFieldNumber = 4;
    private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> _repeated_transactions_codec
        = pb::FieldCodec.ForMessage(34, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction.Parser);
    private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> transactions_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Transaction> Transactions {
      get { return transactions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as Items);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(Items other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Type != other.Type) return false;
      if(!blocks_.Equals(other.blocks_)) return false;
      if(!blockHeaders_.Equals(other.blockHeaders_)) return false;
      if(!transactions_.Equals(other.transactions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Type != 0) hash ^= Type.GetHashCode();
      hash ^= blocks_.GetHashCode();
      hash ^= blockHeaders_.GetHashCode();
      hash ^= transactions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Type != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Type);
      }
      blocks_.WriteTo(output, _repeated_blocks_codec);
      blockHeaders_.WriteTo(output, _repeated_blockHeaders_codec);
      transactions_.WriteTo(output, _repeated_transactions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Type != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
      }
      size += blocks_.CalculateSize(_repeated_blocks_codec);
      size += blockHeaders_.CalculateSize(_repeated_blockHeaders_codec);
      size += transactions_.CalculateSize(_repeated_transactions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(Items other) {
      if (other == null) {
        return;
      }
      if (other.Type != 0) {
        Type = other.Type;
      }
      blocks_.Add(other.blocks_);
      blockHeaders_.Add(other.blockHeaders_);
      transactions_.Add(other.transactions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            type_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Items.Types.ItemType) input.ReadEnum();
            break;
          }
          case 18: {
            blocks_.AddEntriesFrom(input, _repeated_blocks_codec);
            break;
          }
          case 26: {
            blockHeaders_.AddEntriesFrom(input, _repeated_blockHeaders_codec);
            break;
          }
          case 34: {
            transactions_.AddEntriesFrom(input, _repeated_transactions_codec);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the Items message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public enum ItemType {
        [pbr::OriginalName("ERR")] Err = 0,
        [pbr::OriginalName("TRX")] Trx = 1,
        [pbr::OriginalName("BLOCK")] Block = 2,
        [pbr::OriginalName("BLOCKHEADER")] Blockheader = 3,
      }

    }
    #endregion

  }

  /// <summary>
  /// DynamicProperties
  /// </summary>
  public sealed partial class DynamicProperties : pb::IMessage<DynamicProperties> {
    private static readonly pb::MessageParser<DynamicProperties> _parser = new pb::MessageParser<DynamicProperties>(() => new DynamicProperties());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DynamicProperties> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[23]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicProperties() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicProperties(DynamicProperties other) : this() {
      lastSolidityBlockNum_ = other.lastSolidityBlockNum_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DynamicProperties Clone() {
      return new DynamicProperties(this);
    }

    /// <summary>Field number for the "last_solidity_block_num" field.</summary>
    public const int LastSolidityBlockNumFieldNumber = 1;
    private long lastSolidityBlockNum_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long LastSolidityBlockNum {
      get { return lastSolidityBlockNum_; }
      set {
        lastSolidityBlockNum_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DynamicProperties);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DynamicProperties other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LastSolidityBlockNum != other.LastSolidityBlockNum) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (LastSolidityBlockNum != 0L) hash ^= LastSolidityBlockNum.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (LastSolidityBlockNum != 0L) {
        output.WriteRawTag(8);
        output.WriteInt64(LastSolidityBlockNum);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (LastSolidityBlockNum != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(LastSolidityBlockNum);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DynamicProperties other) {
      if (other == null) {
        return;
      }
      if (other.LastSolidityBlockNum != 0L) {
        LastSolidityBlockNum = other.LastSolidityBlockNum;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LastSolidityBlockNum = input.ReadInt64();
            break;
          }
        }
      }
    }

  }

  public sealed partial class DisconnectMessage : pb::IMessage<DisconnectMessage> {
    private static readonly pb::MessageParser<DisconnectMessage> _parser = new pb::MessageParser<DisconnectMessage>(() => new DisconnectMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<DisconnectMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[24]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectMessage(DisconnectMessage other) : this() {
      reason_ = other.reason_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public DisconnectMessage Clone() {
      return new DisconnectMessage(this);
    }

    /// <summary>Field number for the "reason" field.</summary>
    public const int ReasonFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ReasonCode reason_ = 0;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ReasonCode Reason {
      get { return reason_; }
      set {
        reason_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as DisconnectMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(DisconnectMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Reason != other.Reason) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (Reason != 0) hash ^= Reason.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (Reason != 0) {
        output.WriteRawTag(8);
        output.WriteEnum((int) Reason);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (Reason != 0) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Reason);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(DisconnectMessage other) {
      if (other == null) {
        return;
      }
      if (other.Reason != 0) {
        Reason = other.Reason;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            reason_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.ReasonCode) input.ReadEnum();
            break;
          }
        }
      }
    }

  }

  public sealed partial class HelloMessage : pb::IMessage<HelloMessage> {
    private static readonly pb::MessageParser<HelloMessage> _parser = new pb::MessageParser<HelloMessage>(() => new HelloMessage());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<HelloMessage> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[25]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloMessage() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloMessage(HelloMessage other) : this() {
      From = other.from_ != null ? other.From.Clone() : null;
      version_ = other.version_;
      timestamp_ = other.timestamp_;
      GenesisBlockId = other.genesisBlockId_ != null ? other.GenesisBlockId.Clone() : null;
      SolidBlockId = other.solidBlockId_ != null ? other.SolidBlockId.Clone() : null;
      HeadBlockId = other.headBlockId_ != null ? other.HeadBlockId.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public HelloMessage Clone() {
      return new HelloMessage(this);
    }

    /// <summary>Field number for the "from" field.</summary>
    public const int FromFieldNumber = 1;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Endpoint from_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Endpoint From {
      get { return from_; }
      set {
        from_ = value;
      }
    }

    /// <summary>Field number for the "version" field.</summary>
    public const int VersionFieldNumber = 2;
    private int version_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int Version {
      get { return version_; }
      set {
        version_ = value;
      }
    }

    /// <summary>Field number for the "timestamp" field.</summary>
    public const int TimestampFieldNumber = 3;
    private long timestamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long Timestamp {
      get { return timestamp_; }
      set {
        timestamp_ = value;
      }
    }

    /// <summary>Field number for the "genesisBlockId" field.</summary>
    public const int GenesisBlockIdFieldNumber = 4;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId genesisBlockId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId GenesisBlockId {
      get { return genesisBlockId_; }
      set {
        genesisBlockId_ = value;
      }
    }

    /// <summary>Field number for the "solidBlockId" field.</summary>
    public const int SolidBlockIdFieldNumber = 5;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId solidBlockId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId SolidBlockId {
      get { return solidBlockId_; }
      set {
        solidBlockId_ = value;
      }
    }

    /// <summary>Field number for the "headBlockId" field.</summary>
    public const int HeadBlockIdFieldNumber = 6;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId headBlockId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId HeadBlockId {
      get { return headBlockId_; }
      set {
        headBlockId_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as HelloMessage);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(HelloMessage other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(From, other.From)) return false;
      if (Version != other.Version) return false;
      if (Timestamp != other.Timestamp) return false;
      if (!object.Equals(GenesisBlockId, other.GenesisBlockId)) return false;
      if (!object.Equals(SolidBlockId, other.SolidBlockId)) return false;
      if (!object.Equals(HeadBlockId, other.HeadBlockId)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (from_ != null) hash ^= From.GetHashCode();
      if (Version != 0) hash ^= Version.GetHashCode();
      if (Timestamp != 0L) hash ^= Timestamp.GetHashCode();
      if (genesisBlockId_ != null) hash ^= GenesisBlockId.GetHashCode();
      if (solidBlockId_ != null) hash ^= SolidBlockId.GetHashCode();
      if (headBlockId_ != null) hash ^= HeadBlockId.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (from_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(From);
      }
      if (Version != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Version);
      }
      if (Timestamp != 0L) {
        output.WriteRawTag(24);
        output.WriteInt64(Timestamp);
      }
      if (genesisBlockId_ != null) {
        output.WriteRawTag(34);
        output.WriteMessage(GenesisBlockId);
      }
      if (solidBlockId_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(SolidBlockId);
      }
      if (headBlockId_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(HeadBlockId);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (from_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(From);
      }
      if (Version != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Version);
      }
      if (Timestamp != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(Timestamp);
      }
      if (genesisBlockId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(GenesisBlockId);
      }
      if (solidBlockId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SolidBlockId);
      }
      if (headBlockId_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(HeadBlockId);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(HelloMessage other) {
      if (other == null) {
        return;
      }
      if (other.from_ != null) {
        if (from_ == null) {
          from_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Endpoint();
        }
        From.MergeFrom(other.From);
      }
      if (other.Version != 0) {
        Version = other.Version;
      }
      if (other.Timestamp != 0L) {
        Timestamp = other.Timestamp;
      }
      if (other.genesisBlockId_ != null) {
        if (genesisBlockId_ == null) {
          genesisBlockId_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId();
        }
        GenesisBlockId.MergeFrom(other.GenesisBlockId);
      }
      if (other.solidBlockId_ != null) {
        if (solidBlockId_ == null) {
          solidBlockId_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId();
        }
        SolidBlockId.MergeFrom(other.SolidBlockId);
      }
      if (other.headBlockId_ != null) {
        if (headBlockId_ == null) {
          headBlockId_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId();
        }
        HeadBlockId.MergeFrom(other.HeadBlockId);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (from_ == null) {
              from_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.Endpoint();
            }
            input.ReadMessage(from_);
            break;
          }
          case 16: {
            Version = input.ReadInt32();
            break;
          }
          case 24: {
            Timestamp = input.ReadInt64();
            break;
          }
          case 34: {
            if (genesisBlockId_ == null) {
              genesisBlockId_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId();
            }
            input.ReadMessage(genesisBlockId_);
            break;
          }
          case 42: {
            if (solidBlockId_ == null) {
              solidBlockId_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId();
            }
            input.ReadMessage(solidBlockId_);
            break;
          }
          case 50: {
            if (headBlockId_ == null) {
              headBlockId_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Types.BlockId();
            }
            input.ReadMessage(headBlockId_);
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the HelloMessage message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class BlockId : pb::IMessage<BlockId> {
        private static readonly pb::MessageParser<BlockId> _parser = new pb::MessageParser<BlockId>(() => new BlockId());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<BlockId> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.HelloMessage.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId(BlockId other) : this() {
          hash_ = other.hash_;
          number_ = other.number_;
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public BlockId Clone() {
          return new BlockId(this);
        }

        /// <summary>Field number for the "hash" field.</summary>
        public const int HashFieldNumber = 1;
        private pb::ByteString hash_ = pb::ByteString.Empty;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pb::ByteString Hash {
          get { return hash_; }
          set {
            hash_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
          }
        }

        /// <summary>Field number for the "number" field.</summary>
        public const int NumberFieldNumber = 2;
        private long number_;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public long Number {
          get { return number_; }
          set {
            number_ = value;
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as BlockId);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(BlockId other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if (Hash != other.Hash) return false;
          if (Number != other.Number) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          if (Hash.Length != 0) hash ^= Hash.GetHashCode();
          if (Number != 0L) hash ^= Number.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          if (Hash.Length != 0) {
            output.WriteRawTag(10);
            output.WriteBytes(Hash);
          }
          if (Number != 0L) {
            output.WriteRawTag(16);
            output.WriteInt64(Number);
          }
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          if (Hash.Length != 0) {
            size += 1 + pb::CodedOutputStream.ComputeBytesSize(Hash);
          }
          if (Number != 0L) {
            size += 1 + pb::CodedOutputStream.ComputeInt64Size(Number);
          }
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(BlockId other) {
          if (other == null) {
            return;
          }
          if (other.Hash.Length != 0) {
            Hash = other.Hash;
          }
          if (other.Number != 0L) {
            Number = other.Number;
          }
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                Hash = input.ReadBytes();
                break;
              }
              case 16: {
                Number = input.ReadInt64();
                break;
              }
            }
          }
        }

      }

    }
    #endregion

  }

  public sealed partial class StorageItem : pb::IMessage<StorageItem> {
    private static readonly pb::MessageParser<StorageItem> _parser = new pb::MessageParser<StorageItem>(() => new StorageItem());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<StorageItem> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[26]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageItem() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageItem(StorageItem other) : this() {
      contractAddress_ = other.contractAddress_;
      items_ = other.items_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public StorageItem Clone() {
      return new StorageItem(this);
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 1;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "items" field.</summary>
    public const int ItemsFieldNumber = 2;
    private static readonly pbc::MapField<string, pb::ByteString>.Codec _map_items_codec
        = new pbc::MapField<string, pb::ByteString>.Codec(pb::FieldCodec.ForString(10), pb::FieldCodec.ForBytes(18), 18);
    private readonly pbc::MapField<string, pb::ByteString> items_ = new pbc::MapField<string, pb::ByteString>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pbc::MapField<string, pb::ByteString> Items {
      get { return items_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as StorageItem);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(StorageItem other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ContractAddress != other.ContractAddress) return false;
      if (!Items.Equals(other.Items)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      hash ^= Items.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(ContractAddress);
      }
      items_.WriteTo(output, _map_items_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      size += items_.CalculateSize(_map_items_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(StorageItem other) {
      if (other == null) {
        return;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      items_.Add(other.items_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 18: {
            items_.AddEntriesFrom(input, _map_items_codec);
            break;
          }
        }
      }
    }

  }

  public sealed partial class SmartContract : pb::IMessage<SmartContract> {
    private static readonly pb::MessageParser<SmartContract> _parser = new pb::MessageParser<SmartContract>(() => new SmartContract());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pb::MessageParser<SmartContract> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.TronReflection.Descriptor.MessageTypes[27]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContract() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContract(SmartContract other) : this() {
      originAddress_ = other.originAddress_;
      contractAddress_ = other.contractAddress_;
      Abi = other.abi_ != null ? other.Abi.Clone() : null;
      bytecode_ = other.bytecode_;
      callValue_ = other.callValue_;
      consumeUserResourcePercent_ = other.consumeUserResourcePercent_;
      name_ = other.name_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public SmartContract Clone() {
      return new SmartContract(this);
    }

    /// <summary>Field number for the "origin_address" field.</summary>
    public const int OriginAddressFieldNumber = 1;
    private pb::ByteString originAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString OriginAddress {
      get { return originAddress_; }
      set {
        originAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "contract_address" field.</summary>
    public const int ContractAddressFieldNumber = 2;
    private pb::ByteString contractAddress_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString ContractAddress {
      get { return contractAddress_; }
      set {
        contractAddress_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "abi" field.</summary>
    public const int AbiFieldNumber = 3;
    private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI abi_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI Abi {
      get { return abi_; }
      set {
        abi_ = value;
      }
    }

    /// <summary>Field number for the "bytecode" field.</summary>
    public const int BytecodeFieldNumber = 4;
    private pb::ByteString bytecode_ = pb::ByteString.Empty;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public pb::ByteString Bytecode {
      get { return bytecode_; }
      set {
        bytecode_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "call_value" field.</summary>
    public const int CallValueFieldNumber = 5;
    private long callValue_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long CallValue {
      get { return callValue_; }
      set {
        callValue_ = value;
      }
    }

    /// <summary>Field number for the "consume_user_resource_percent" field.</summary>
    public const int ConsumeUserResourcePercentFieldNumber = 6;
    private long consumeUserResourcePercent_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public long ConsumeUserResourcePercent {
      get { return consumeUserResourcePercent_; }
      set {
        consumeUserResourcePercent_ = value;
      }
    }

    /// <summary>Field number for the "name" field.</summary>
    public const int NameFieldNumber = 7;
    private string name_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public string Name {
      get { return name_; }
      set {
        name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override bool Equals(object other) {
      return Equals(other as SmartContract);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public bool Equals(SmartContract other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (OriginAddress != other.OriginAddress) return false;
      if (ContractAddress != other.ContractAddress) return false;
      if (!object.Equals(Abi, other.Abi)) return false;
      if (Bytecode != other.Bytecode) return false;
      if (CallValue != other.CallValue) return false;
      if (ConsumeUserResourcePercent != other.ConsumeUserResourcePercent) return false;
      if (Name != other.Name) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override int GetHashCode() {
      int hash = 1;
      if (OriginAddress.Length != 0) hash ^= OriginAddress.GetHashCode();
      if (ContractAddress.Length != 0) hash ^= ContractAddress.GetHashCode();
      if (abi_ != null) hash ^= Abi.GetHashCode();
      if (Bytecode.Length != 0) hash ^= Bytecode.GetHashCode();
      if (CallValue != 0L) hash ^= CallValue.GetHashCode();
      if (ConsumeUserResourcePercent != 0L) hash ^= ConsumeUserResourcePercent.GetHashCode();
      if (Name.Length != 0) hash ^= Name.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void WriteTo(pb::CodedOutputStream output) {
      if (OriginAddress.Length != 0) {
        output.WriteRawTag(10);
        output.WriteBytes(OriginAddress);
      }
      if (ContractAddress.Length != 0) {
        output.WriteRawTag(18);
        output.WriteBytes(ContractAddress);
      }
      if (abi_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Abi);
      }
      if (Bytecode.Length != 0) {
        output.WriteRawTag(34);
        output.WriteBytes(Bytecode);
      }
      if (CallValue != 0L) {
        output.WriteRawTag(40);
        output.WriteInt64(CallValue);
      }
      if (ConsumeUserResourcePercent != 0L) {
        output.WriteRawTag(48);
        output.WriteInt64(ConsumeUserResourcePercent);
      }
      if (Name.Length != 0) {
        output.WriteRawTag(58);
        output.WriteString(Name);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public int CalculateSize() {
      int size = 0;
      if (OriginAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(OriginAddress);
      }
      if (ContractAddress.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(ContractAddress);
      }
      if (abi_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Abi);
      }
      if (Bytecode.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeBytesSize(Bytecode);
      }
      if (CallValue != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(CallValue);
      }
      if (ConsumeUserResourcePercent != 0L) {
        size += 1 + pb::CodedOutputStream.ComputeInt64Size(ConsumeUserResourcePercent);
      }
      if (Name.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(SmartContract other) {
      if (other == null) {
        return;
      }
      if (other.OriginAddress.Length != 0) {
        OriginAddress = other.OriginAddress;
      }
      if (other.ContractAddress.Length != 0) {
        ContractAddress = other.ContractAddress;
      }
      if (other.abi_ != null) {
        if (abi_ == null) {
          abi_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI();
        }
        Abi.MergeFrom(other.Abi);
      }
      if (other.Bytecode.Length != 0) {
        Bytecode = other.Bytecode;
      }
      if (other.CallValue != 0L) {
        CallValue = other.CallValue;
      }
      if (other.ConsumeUserResourcePercent != 0L) {
        ConsumeUserResourcePercent = other.ConsumeUserResourcePercent;
      }
      if (other.Name.Length != 0) {
        Name = other.Name;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public void MergeFrom(pb::CodedInputStream input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            OriginAddress = input.ReadBytes();
            break;
          }
          case 18: {
            ContractAddress = input.ReadBytes();
            break;
          }
          case 26: {
            if (abi_ == null) {
              abi_ = new global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI();
            }
            input.ReadMessage(abi_);
            break;
          }
          case 34: {
            Bytecode = input.ReadBytes();
            break;
          }
          case 40: {
            CallValue = input.ReadInt64();
            break;
          }
          case 48: {
            ConsumeUserResourcePercent = input.ReadInt64();
            break;
          }
          case 58: {
            Name = input.ReadString();
            break;
          }
        }
      }
    }

    #region Nested types
    /// <summary>Container for nested types declared in the SmartContract message type.</summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    public static partial class Types {
      public sealed partial class ABI : pb::IMessage<ABI> {
        private static readonly pb::MessageParser<ABI> _parser = new pb::MessageParser<ABI>(() => new ABI());
        private pb::UnknownFieldSet _unknownFields;
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pb::MessageParser<ABI> Parser { get { return _parser; } }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static pbr::MessageDescriptor Descriptor {
          get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Descriptor.NestedTypes[0]; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        pbr::MessageDescriptor pb::IMessage.Descriptor {
          get { return Descriptor; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ABI() {
          OnConstruction();
        }

        partial void OnConstruction();

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ABI(ABI other) : this() {
          entrys_ = other.entrys_.Clone();
          _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public ABI Clone() {
          return new ABI(this);
        }

        /// <summary>Field number for the "entrys" field.</summary>
        public const int EntrysFieldNumber = 1;
        private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry> _repeated_entrys_codec
            = pb::FieldCodec.ForMessage(10, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Parser);
        private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry> entrys_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry>();
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry> Entrys {
          get { return entrys_; }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override bool Equals(object other) {
          return Equals(other as ABI);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public bool Equals(ABI other) {
          if (ReferenceEquals(other, null)) {
            return false;
          }
          if (ReferenceEquals(other, this)) {
            return true;
          }
          if(!entrys_.Equals(other.entrys_)) return false;
          return Equals(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override int GetHashCode() {
          int hash = 1;
          hash ^= entrys_.GetHashCode();
          if (_unknownFields != null) {
            hash ^= _unknownFields.GetHashCode();
          }
          return hash;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public override string ToString() {
          return pb::JsonFormatter.ToDiagnosticString(this);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void WriteTo(pb::CodedOutputStream output) {
          entrys_.WriteTo(output, _repeated_entrys_codec);
          if (_unknownFields != null) {
            _unknownFields.WriteTo(output);
          }
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public int CalculateSize() {
          int size = 0;
          size += entrys_.CalculateSize(_repeated_entrys_codec);
          if (_unknownFields != null) {
            size += _unknownFields.CalculateSize();
          }
          return size;
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(ABI other) {
          if (other == null) {
            return;
          }
          entrys_.Add(other.entrys_);
          _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
        }

        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public void MergeFrom(pb::CodedInputStream input) {
          uint tag;
          while ((tag = input.ReadTag()) != 0) {
            switch(tag) {
              default:
                _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                break;
              case 10: {
                entrys_.AddEntriesFrom(input, _repeated_entrys_codec);
                break;
              }
            }
          }
        }

        #region Nested types
        /// <summary>Container for nested types declared in the ABI message type.</summary>
        [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
        public static partial class Types {
          public sealed partial class Entry : pb::IMessage<Entry> {
            private static readonly pb::MessageParser<Entry> _parser = new pb::MessageParser<Entry>(() => new Entry());
            private pb::UnknownFieldSet _unknownFields;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pb::MessageParser<Entry> Parser { get { return _parser; } }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static pbr::MessageDescriptor Descriptor {
              get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Descriptor.NestedTypes[0]; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            pbr::MessageDescriptor pb::IMessage.Descriptor {
              get { return Descriptor; }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry() {
              OnConstruction();
            }

            partial void OnConstruction();

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry(Entry other) : this() {
              anonymous_ = other.anonymous_;
              constant_ = other.constant_;
              name_ = other.name_;
              inputs_ = other.inputs_.Clone();
              outputs_ = other.outputs_.Clone();
              type_ = other.type_;
              payable_ = other.payable_;
              stateMutability_ = other.stateMutability_;
              _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public Entry Clone() {
              return new Entry(this);
            }

            /// <summary>Field number for the "anonymous" field.</summary>
            public const int AnonymousFieldNumber = 1;
            private bool anonymous_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Anonymous {
              get { return anonymous_; }
              set {
                anonymous_ = value;
              }
            }

            /// <summary>Field number for the "constant" field.</summary>
            public const int ConstantFieldNumber = 2;
            private bool constant_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Constant {
              get { return constant_; }
              set {
                constant_ = value;
              }
            }

            /// <summary>Field number for the "name" field.</summary>
            public const int NameFieldNumber = 3;
            private string name_ = "";
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public string Name {
              get { return name_; }
              set {
                name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
              }
            }

            /// <summary>Field number for the "inputs" field.</summary>
            public const int InputsFieldNumber = 4;
            private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param> _repeated_inputs_codec
                = pb::FieldCodec.ForMessage(34, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param.Parser);
            private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param> inputs_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param> Inputs {
              get { return inputs_; }
            }

            /// <summary>Field number for the "outputs" field.</summary>
            public const int OutputsFieldNumber = 5;
            private static readonly pb::FieldCodec<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param> _repeated_outputs_codec
                = pb::FieldCodec.ForMessage(42, global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param.Parser);
            private readonly pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param> outputs_ = new pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param>();
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public pbc::RepeatedField<global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.Param> Outputs {
              get { return outputs_; }
            }

            /// <summary>Field number for the "type" field.</summary>
            public const int TypeFieldNumber = 6;
            private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.EntryType type_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.EntryType Type {
              get { return type_; }
              set {
                type_ = value;
              }
            }

            /// <summary>Field number for the "payable" field.</summary>
            public const int PayableFieldNumber = 7;
            private bool payable_;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Payable {
              get { return payable_; }
              set {
                payable_ = value;
              }
            }

            /// <summary>Field number for the "stateMutability" field.</summary>
            public const int StateMutabilityFieldNumber = 8;
            private global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType stateMutability_ = 0;
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType StateMutability {
              get { return stateMutability_; }
              set {
                stateMutability_ = value;
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override bool Equals(object other) {
              return Equals(other as Entry);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public bool Equals(Entry other) {
              if (ReferenceEquals(other, null)) {
                return false;
              }
              if (ReferenceEquals(other, this)) {
                return true;
              }
              if (Anonymous != other.Anonymous) return false;
              if (Constant != other.Constant) return false;
              if (Name != other.Name) return false;
              if(!inputs_.Equals(other.inputs_)) return false;
              if(!outputs_.Equals(other.outputs_)) return false;
              if (Type != other.Type) return false;
              if (Payable != other.Payable) return false;
              if (StateMutability != other.StateMutability) return false;
              return Equals(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override int GetHashCode() {
              int hash = 1;
              if (Anonymous != false) hash ^= Anonymous.GetHashCode();
              if (Constant != false) hash ^= Constant.GetHashCode();
              if (Name.Length != 0) hash ^= Name.GetHashCode();
              hash ^= inputs_.GetHashCode();
              hash ^= outputs_.GetHashCode();
              if (Type != 0) hash ^= Type.GetHashCode();
              if (Payable != false) hash ^= Payable.GetHashCode();
              if (StateMutability != 0) hash ^= StateMutability.GetHashCode();
              if (_unknownFields != null) {
                hash ^= _unknownFields.GetHashCode();
              }
              return hash;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public override string ToString() {
              return pb::JsonFormatter.ToDiagnosticString(this);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void WriteTo(pb::CodedOutputStream output) {
              if (Anonymous != false) {
                output.WriteRawTag(8);
                output.WriteBool(Anonymous);
              }
              if (Constant != false) {
                output.WriteRawTag(16);
                output.WriteBool(Constant);
              }
              if (Name.Length != 0) {
                output.WriteRawTag(26);
                output.WriteString(Name);
              }
              inputs_.WriteTo(output, _repeated_inputs_codec);
              outputs_.WriteTo(output, _repeated_outputs_codec);
              if (Type != 0) {
                output.WriteRawTag(48);
                output.WriteEnum((int) Type);
              }
              if (Payable != false) {
                output.WriteRawTag(56);
                output.WriteBool(Payable);
              }
              if (StateMutability != 0) {
                output.WriteRawTag(64);
                output.WriteEnum((int) StateMutability);
              }
              if (_unknownFields != null) {
                _unknownFields.WriteTo(output);
              }
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public int CalculateSize() {
              int size = 0;
              if (Anonymous != false) {
                size += 1 + 1;
              }
              if (Constant != false) {
                size += 1 + 1;
              }
              if (Name.Length != 0) {
                size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
              }
              size += inputs_.CalculateSize(_repeated_inputs_codec);
              size += outputs_.CalculateSize(_repeated_outputs_codec);
              if (Type != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Type);
              }
              if (Payable != false) {
                size += 1 + 1;
              }
              if (StateMutability != 0) {
                size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) StateMutability);
              }
              if (_unknownFields != null) {
                size += _unknownFields.CalculateSize();
              }
              return size;
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(Entry other) {
              if (other == null) {
                return;
              }
              if (other.Anonymous != false) {
                Anonymous = other.Anonymous;
              }
              if (other.Constant != false) {
                Constant = other.Constant;
              }
              if (other.Name.Length != 0) {
                Name = other.Name;
              }
              inputs_.Add(other.inputs_);
              outputs_.Add(other.outputs_);
              if (other.Type != 0) {
                Type = other.Type;
              }
              if (other.Payable != false) {
                Payable = other.Payable;
              }
              if (other.StateMutability != 0) {
                StateMutability = other.StateMutability;
              }
              _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
            }

            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public void MergeFrom(pb::CodedInputStream input) {
              uint tag;
              while ((tag = input.ReadTag()) != 0) {
                switch(tag) {
                  default:
                    _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                    break;
                  case 8: {
                    Anonymous = input.ReadBool();
                    break;
                  }
                  case 16: {
                    Constant = input.ReadBool();
                    break;
                  }
                  case 26: {
                    Name = input.ReadString();
                    break;
                  }
                  case 34: {
                    inputs_.AddEntriesFrom(input, _repeated_inputs_codec);
                    break;
                  }
                  case 42: {
                    outputs_.AddEntriesFrom(input, _repeated_outputs_codec);
                    break;
                  }
                  case 48: {
                    type_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.EntryType) input.ReadEnum();
                    break;
                  }
                  case 56: {
                    Payable = input.ReadBool();
                    break;
                  }
                  case 64: {
                    stateMutability_ = (global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Types.StateMutabilityType) input.ReadEnum();
                    break;
                  }
                }
              }
            }

            #region Nested types
            /// <summary>Container for nested types declared in the Entry message type.</summary>
            [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
            public static partial class Types {
              public enum EntryType {
                [pbr::OriginalName("UnknownEntryType")] UnknownEntryType = 0,
                [pbr::OriginalName("Constructor")] Constructor = 1,
                [pbr::OriginalName("Function")] Function = 2,
                [pbr::OriginalName("Event")] Event = 3,
                [pbr::OriginalName("Fallback")] Fallback = 4,
              }

              public enum StateMutabilityType {
                [pbr::OriginalName("UnknownMutabilityType")] UnknownMutabilityType = 0,
                [pbr::OriginalName("Pure")] Pure = 1,
                [pbr::OriginalName("View")] View = 2,
                [pbr::OriginalName("Nonpayable")] Nonpayable = 3,
                [pbr::OriginalName("Payable")] Payable = 4,
              }

              public sealed partial class Param : pb::IMessage<Param> {
                private static readonly pb::MessageParser<Param> _parser = new pb::MessageParser<Param>(() => new Param());
                private pb::UnknownFieldSet _unknownFields;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pb::MessageParser<Param> Parser { get { return _parser; } }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public static pbr::MessageDescriptor Descriptor {
                  get { return global::Latoken.CurrencyProvider.Protocol.Tron.Grpc.Core.SmartContract.Types.ABI.Types.Entry.Descriptor.NestedTypes[0]; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                pbr::MessageDescriptor pb::IMessage.Descriptor {
                  get { return Descriptor; }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Param() {
                  OnConstruction();
                }

                partial void OnConstruction();

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Param(Param other) : this() {
                  indexed_ = other.indexed_;
                  name_ = other.name_;
                  type_ = other.type_;
                  _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public Param Clone() {
                  return new Param(this);
                }

                /// <summary>Field number for the "indexed" field.</summary>
                public const int IndexedFieldNumber = 1;
                private bool indexed_;
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Indexed {
                  get { return indexed_; }
                  set {
                    indexed_ = value;
                  }
                }

                /// <summary>Field number for the "name" field.</summary>
                public const int NameFieldNumber = 2;
                private string name_ = "";
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Name {
                  get { return name_; }
                  set {
                    name_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                /// <summary>Field number for the "type" field.</summary>
                public const int TypeFieldNumber = 3;
                private string type_ = "";
                /// <summary>
                /// SolidityType type = 3;
                /// </summary>
                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public string Type {
                  get { return type_; }
                  set {
                    type_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override bool Equals(object other) {
                  return Equals(other as Param);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public bool Equals(Param other) {
                  if (ReferenceEquals(other, null)) {
                    return false;
                  }
                  if (ReferenceEquals(other, this)) {
                    return true;
                  }
                  if (Indexed != other.Indexed) return false;
                  if (Name != other.Name) return false;
                  if (Type != other.Type) return false;
                  return Equals(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override int GetHashCode() {
                  int hash = 1;
                  if (Indexed != false) hash ^= Indexed.GetHashCode();
                  if (Name.Length != 0) hash ^= Name.GetHashCode();
                  if (Type.Length != 0) hash ^= Type.GetHashCode();
                  if (_unknownFields != null) {
                    hash ^= _unknownFields.GetHashCode();
                  }
                  return hash;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public override string ToString() {
                  return pb::JsonFormatter.ToDiagnosticString(this);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void WriteTo(pb::CodedOutputStream output) {
                  if (Indexed != false) {
                    output.WriteRawTag(8);
                    output.WriteBool(Indexed);
                  }
                  if (Name.Length != 0) {
                    output.WriteRawTag(18);
                    output.WriteString(Name);
                  }
                  if (Type.Length != 0) {
                    output.WriteRawTag(26);
                    output.WriteString(Type);
                  }
                  if (_unknownFields != null) {
                    _unknownFields.WriteTo(output);
                  }
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public int CalculateSize() {
                  int size = 0;
                  if (Indexed != false) {
                    size += 1 + 1;
                  }
                  if (Name.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Name);
                  }
                  if (Type.Length != 0) {
                    size += 1 + pb::CodedOutputStream.ComputeStringSize(Type);
                  }
                  if (_unknownFields != null) {
                    size += _unknownFields.CalculateSize();
                  }
                  return size;
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(Param other) {
                  if (other == null) {
                    return;
                  }
                  if (other.Indexed != false) {
                    Indexed = other.Indexed;
                  }
                  if (other.Name.Length != 0) {
                    Name = other.Name;
                  }
                  if (other.Type.Length != 0) {
                    Type = other.Type;
                  }
                  _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
                }

                [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
                public void MergeFrom(pb::CodedInputStream input) {
                  uint tag;
                  while ((tag = input.ReadTag()) != 0) {
                    switch(tag) {
                      default:
                        _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
                        break;
                      case 8: {
                        Indexed = input.ReadBool();
                        break;
                      }
                      case 18: {
                        Name = input.ReadString();
                        break;
                      }
                      case 26: {
                        Type = input.ReadString();
                        break;
                      }
                    }
                  }
                }

              }

            }
            #endregion

          }

        }
        #endregion

      }

    }
    #endregion

  }

  #endregion

}

#endregion Designer generated code
